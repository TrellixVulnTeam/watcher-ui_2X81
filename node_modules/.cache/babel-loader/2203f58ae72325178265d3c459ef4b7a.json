{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/common/VulnCatChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Charts from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CategoryChart = props => {\n  _s();\n\n  console.log(props);\n  const [chartoptions, setChartoptions] = useState({\n    series: props.series ? props.series : [14, 23, 21],\n    options: {\n      chart: {\n        offsetY: 20\n      },\n      stroke: {\n        colors: ['#fff']\n      },\n      colors: props.color ? props.color : ['#7ed957', '#008037', '#2bbbad'],\n      labels: [\"SubD takeover\", \"Leaky directory\", \"git misconfig\"],\n      dataLabels: {\n        enabled: false\n      },\n      yaxis: {\n        show: false\n      },\n      fill: {\n        opacity: 0.95\n      },\n      plotOptions: {\n        polarArea: {\n          rings: {\n            strokeWidth: 0\n          },\n          spokes: {\n            strokeWidth: 0\n          }\n        }\n      },\n      legend: {\n        position: \"right\",\n        offsetY: 20,\n        offsetX: 10\n      },\n      tooltip: {\n        style: {\n          fontSize: '8px',\n          fontFamily: 'Inter'\n        },\n        x: {\n          show: false\n        }\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Charts, {\n      options: chartoptions.options,\n      series: chartoptions.series,\n      type: \"polarArea\",\n      width: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(CategoryChart, \"0hmmquMiGYnp2CasyAg/s+Gfgvs=\");\n\n_c = CategoryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryChart\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/common/VulnCatChart.tsx"],"names":["React","useState","Charts","CategoryChart","props","console","log","chartoptions","setChartoptions","series","options","chart","offsetY","stroke","colors","color","labels","dataLabels","enabled","yaxis","show","fill","opacity","plotOptions","polarArea","rings","strokeWidth","spokes","legend","position","offsetX","tooltip","style","fontSize","fontFamily","x","responsive","breakpoint","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,QAAmD,OAAnD;AAKA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAgB;AAAA;;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC;AAC7CQ,IAAAA,MAAM,EAAEL,KAAK,CAACK,MAAN,GAAcL,KAAK,CAACK,MAApB,GAA6B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADQ;AAE7CC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE;AADN,OADF;AAILC,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE,CAAC,MAAD;AADJ,OAJH;AAOLA,MAAAA,MAAM,EAAEV,KAAK,CAACW,KAAN,GAAaX,KAAK,CAACW,KAAnB,GAA4B,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAP/B;AAQLC,MAAAA,MAAM,EAAE,CAAC,eAAD,EAAkB,iBAAlB,EAAqC,eAArC,CARH;AAULC,MAAAA,UAAU,EAAE;AACRC,QAAAA,OAAO,EAAE;AADD,OAVP;AAaLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE;AADH,OAbF;AAgBLC,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAAE;AADP,OAhBD;AAmBLC,MAAAA,WAAW,EAAE;AACTC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE;AADR,WADE;AAITC,UAAAA,MAAM,EAAE;AACND,YAAAA,WAAW,EAAE;AADP;AAJC;AADF,OAnBR;AA6BHE,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,OADJ;AAENjB,QAAAA,OAAO,EAAE,EAFH;AAGNkB,QAAAA,OAAO,EAAE;AAHH,OA7BL;AAkCLC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAE,KADP;AAEHC,UAAAA,UAAU,EAAE;AAFT,SADF;AAKLC,QAAAA,CAAC,EAAE;AACCf,UAAAA,IAAI,EAAE;AADP;AALE,OAlCJ;AA2CLgB,MAAAA,UAAU,EAAE,CAAC;AACTC,QAAAA,UAAU,EAAE,GADH;AAET3B,QAAAA,OAAO,EAAE;AACLC,UAAAA,KAAK,EAAE;AACH2B,YAAAA,KAAK,EAAE;AADJ,WADF;AAILV,UAAAA,MAAM,EAAE;AACJC,YAAAA,QAAQ,EAAE;AADN;AAJH;AAFA,OAAD;AA3CP;AAFoC,GAAD,CAAhD;AA4DA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAEtB,YAAY,CAACG,OAD1B;AAEI,MAAA,MAAM,EAAEH,YAAY,CAACE,MAFzB;AAGI,MAAA,IAAI,EAAC,WAHT;AAII,MAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH,CAxEM;;GAAMN,a;;KAAAA,a","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n} from \"mdbreact\";\nimport Charts from \"react-apexcharts\";\nimport { reduceEachTrailingCommentRange } from \"typescript\";\nexport const CategoryChart = (props: any) => {\n    console.log(props)\n    const [chartoptions, setChartoptions] = useState({\n        series: props.series? props.series : [14, 23, 21],\n        options: {\n            chart: {\n                offsetY: 20\n            },\n            stroke: {\n                colors: ['#fff']\n            },\n            colors: props.color? props.color :  ['#7ed957', '#008037', '#2bbbad'],\n            labels: [\"SubD takeover\", \"Leaky directory\", \"git misconfig\"],\n\n            dataLabels: {\n                enabled: false,\n            },\n            yaxis: {\n                show: false\n            },\n            fill: {\n                opacity: 0.95\n            },\n            plotOptions: {\n                polarArea: {\n                  rings: {\n                    strokeWidth: 0\n                  },\n                  spokes: {\n                    strokeWidth: 0\n                  },\n                }\n              },\n              legend: {\n                position: \"right\",\n                offsetY: 20,\n                offsetX: 10\n            },\n            tooltip: {\n                style: {\n                    fontSize: '8px',\n                    fontFamily: 'Inter'\n                  },\n                x: {\n                    show: false\n                }\n            },\n            responsive: [{\n                breakpoint: 480,\n                options: {\n                    chart: {\n                        width: 200\n                    },\n                    legend: {\n                        position: 'bottom'\n                    }\n                }\n            }]\n        },\n\n\n    });\n    return (\n        <>\n            <Charts\n                options={chartoptions.options}\n                series={chartoptions.series}\n                type=\"polarArea\"\n                width=\"300\"\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}