{"ast":null,"code":"import { authToken } from './auth';\nexport const getHeaders = () => {\n  let headers;\n  headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer ' + authToken()\n  };\n  console.log(headers);\n  return headers;\n};\nexport const fetchData = async (endpoint, method, body) => {\n  let response;\n\n  if (method === \"POST\") {\n    const config = {\n      'method': method,\n      'headers': getHeaders(),\n      'body': JSON.stringify(body)\n    };\n    console.log(config);\n    response = await fetch('https://api.thewatcher.live//' + endpoint, config).then(res => res.json()).then(data => {\n      console.log(data);\n      return data;\n    });\n  } else if (method === \"GET\" && body !== undefined) {\n    const config = {\n      'method': method,\n      'headers': getHeaders()\n    };\n    response = await fetch('https://api.thewatcher.live//' + endpoint + body, config).then(res => res.json()).then(data => {\n      console.log(data);\n      console.log(data.message);\n      return data;\n    });\n  } else {\n    const config = {\n      'method': method,\n      'headers': getHeaders()\n    };\n    response = await fetch('https://api.thewatcher.live//' + endpoint, config).then(res => res.json()).then(data => {\n      console.log(data);\n      return data;\n    });\n  }\n\n  return response;\n};","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/services/apiConfig.ts"],"names":["authToken","getHeaders","headers","console","log","fetchData","endpoint","method","body","response","config","JSON","stringify","fetch","then","res","json","data","undefined","message"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,MAAIC,OAAJ;AACAA,EAAAA,OAAO,GAAG;AACN,cAAW,kBADL;AAEN,oBAAgB,kBAFV;AAGN,qBAAiB,YAAYF,SAAS;AAHhC,GAAV;AAKAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAOA,OAAP;AACH,CATM;AAUP,OAAO,MAAMG,SAAS,GAAG,OAAOC,QAAP,EAAsBC,MAAtB,EAAmCC,IAAnC,KAAkD;AACvE,MAAIC,QAAJ;;AAEA,MAAGF,MAAM,KAAK,MAAd,EAAqB;AACjB,UAAMG,MAAM,GAAG;AACX,gBAAUH,MADC;AAEX,iBAAWN,UAAU,EAFV;AAGX,cAAQU,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAHG,KAAf;AAKAL,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACJD,IAAAA,QAAQ,GAAG,MAAMI,KAAK,CAAC,kCAAkCP,QAAnC,EAA8CI,MAA9C,CAAL,CAA4DI,IAA5D,CAAiEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAxE,EAAoFF,IAApF,CAA0FG,IAAD,IAAU;AAChHd,MAAAA,OAAO,CAACC,GAAR,CAAYa,IAAZ;AACA,aAAOA,IAAP;AACH,KAHgB,CAAjB;AAIC,GAXD,MAYE,IAAGV,MAAM,KAAK,KAAX,IAAoBC,IAAI,KAAKU,SAAhC,EAA2C;AAC7C,UAAMR,MAAM,GAAG;AACX,gBAAUH,MADC;AAEX,iBAAWN,UAAU;AAFV,KAAf;AAIAQ,IAAAA,QAAQ,GAAG,MAAMI,KAAK,CAAC,kCAAkCP,QAAlC,GAA6CE,IAA9C,EAAqDE,MAArD,CAAL,CAAmEI,IAAnE,CAAwEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA/E,EAA2FF,IAA3F,CAAiGG,IAAD,IAAU;AACvHd,MAAAA,OAAO,CAACC,GAAR,CAAYa,IAAZ;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYa,IAAI,CAACE,OAAjB;AACA,aAAOF,IAAP;AACH,KAJgB,CAAjB;AAKF,GAVI,MAWA;AACF,UAAMP,MAAM,GAAG;AACX,gBAAUH,MADC;AAEX,iBAAWN,UAAU;AAFV,KAAf;AAIAQ,IAAAA,QAAQ,GAAG,MAAMI,KAAK,CAAC,kCAAkCP,QAAnC,EAA+CI,MAA/C,CAAL,CAA6DI,IAA7D,CAAkEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAzE,EAAqFF,IAArF,CAA2FG,IAAD,IAAU;AACjHd,MAAAA,OAAO,CAACC,GAAR,CAAYa,IAAZ;AACA,aAAOA,IAAP;AACH,KAHgB,CAAjB;AAIF;;AAEE,SAAOR,QAAP;AACH,CAtCM","sourcesContent":["import { authToken } from './auth'\nimport { Redirect } from 'react-router';\n\nexport const getHeaders = () => {\n    let headers: any;\n    headers = {\n        'Accept' : 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + authToken(),\n    } \n    console.log(headers);\n    return headers\n}\nexport const fetchData = async (endpoint: any, method: any, body?: any) => {\n    let response: any\n   \n    if(method === \"POST\"){\n        const config = {\n            'method': method,\n            'headers': getHeaders(),\n            'body': JSON.stringify(body),\n        }\n        console.log(config)\n    response = await fetch('https://api.thewatcher.live//' + endpoint,  config ).then(res => res.json()).then((data) => {\n        console.log(data)\n        return data\n    })\n    }\n else if(method === \"GET\" && body !== undefined) {\n    const config = {\n        'method': method,\n        'headers': getHeaders(),\n    }\n    response = await fetch('https://api.thewatcher.live//' + endpoint + body,  config ).then(res => res.json()).then((data) => {\n        console.log(data)\n        console.log(data.message)\n        return data\n    })\n } \n else {\n    const config = {\n        'method': method,\n        'headers': getHeaders(),\n    }\n    response = await fetch('https://api.thewatcher.live//' + endpoint ,  config ).then(res => res.json()).then((data) => {\n        console.log(data)\n        return data\n    })\n }\n\n    return response;\n}\n"]},"metadata":{},"sourceType":"module"}