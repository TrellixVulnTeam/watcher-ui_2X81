{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/login/LoginPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { MDBBtn, MDBCol, MDBContainer, MDBRow, MDBInput } from \"mdbreact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginPage = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [response, setResponse] = useState({});\n  const [success, setSuccess] = useState('');\n  const [validCred, setValidCred] = useState('');\n  useEffect(() => {\n    if (success === \"true\") {\n      const tk = props.UserChange(response);\n      console.log(\"success\", success);\n    } else if (success === \"false\") {\n      const tk = props.UserChange(undefined);\n    }\n  }, [success]);\n  useEffect(() => {\n    if (validCred === \"true\") {\n      setSuccess(\"true\");\n    }\n  }, [validCred]);\n\n  const Login = () => {\n    console.log(email);\n    console.log(password);\n    const requestHeaders = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'mode': 'cors'\n      },\n      body: JSON.stringify({\n        \"username\": email,\n        \"password\": password,\n        \"grant_type\": \"password_grant\"\n      })\n    }; // fetch('http://cloudapp.aws.com:9000/apni-sec/api/login', requestHeaders).then(res => res.json()).then((data) => {\n    // setResponse(data)\n\n    if (email === \"admin\") {\n      setValidCred(\"true\");\n      setResponse({\n        user: \"admin\",\n        isOnboarded: true\n      });\n    } else if (email === \"admin1\") {\n      setValidCred(\"true\");\n      setResponse({\n        user: \"admin1\",\n        isOnboarded: false\n      });\n    } // data.token.length > 10 ? setValidCred(\"true\") : setValidCred(\"false\")\n    // })\n\n  };\n\n  if (success === \"true\") {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          data: response\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      style: {\n        height: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n        sm: \"1\",\n        lg: \"4\",\n        style: {\n          backgroundColor: \"#2bbbad\",\n          opacity: \"0.7\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n        sm: \"11\",\n        lg: \"8\",\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          style: {\n            marginTop: \"20vh\",\n            marginLeft: \"8vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: \"10vh\",\n                fontWeight: 700\n              },\n              className: \"h1 text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 600,\n                  fontSize: \"45px\"\n                },\n                children: \"O\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 105\n              }, this), \"nboard to Watcher\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: /*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"5\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grey-text\",\n                  children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                    label: \"Type your username\",\n                    icon: \"envelope\",\n                    group: true,\n                    type: \"email\",\n                    validate: true,\n                    error: \"wrong\",\n                    value: email,\n                    onChange: e => setEmail(e.target.value),\n                    success: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                    label: \"Type your password\",\n                    icon: \"lock\",\n                    group: true,\n                    type: \"password\",\n                    validate: true,\n                    value: password,\n                    onChange: e => setPassword(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                    color: \"dark\",\n                    onClick: () => Login(),\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    marginTop: \"5vh\"\n                  },\n                  className: \"mb-4\",\n                  children: [\"Unable to login ? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/Signup\",\n                    style: {\n                      textDecoration: \"underline\"\n                    },\n                    children: \"Contact us\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 104\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"ya9KVYcbpWF2VRke0GBFCPWbQtc=\");\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/login/LoginPage.tsx"],"names":["React","useState","useEffect","Redirect","MDBBtn","MDBCol","MDBContainer","MDBRow","MDBInput","LoginPage","props","email","setEmail","password","setPassword","response","setResponse","success","setSuccess","validCred","setValidCred","tk","UserChange","console","log","undefined","Login","requestHeaders","method","headers","body","JSON","stringify","user","isOnboarded","pathname","state","data","height","backgroundColor","opacity","marginTop","marginLeft","marginBottom","fontWeight","fontSize","e","target","value","textDecoration"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport {\n    MDBBtn,\n    MDBCol,\n    MDBContainer,\n    MDBRow,\n    MDBInput\n} from \"mdbreact\";\nimport logo from '../../assets/images/loginImage.png'\n\n\nexport const LoginPage = (props: any) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [response, setResponse] = useState({});\n    const [success, setSuccess] = useState('');\n    const [validCred, setValidCred] = useState('');\n\n    useEffect(() => {\n        if (success === \"true\") {\n            const tk = props.UserChange(response)\n            console.log(\"success\", success)\n        } else if (success === \"false\") {\n            const tk = props.UserChange(undefined)\n        }\n    }, [success]);\n\n    useEffect(() => {\n        if (validCred === \"true\") {\n            setSuccess(\"true\")\n        }\n    }, [validCred]);\n\n    const Login = () => {\n        console.log(email)\n        console.log(password)\n        const requestHeaders = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json', 'mode': 'cors' },\n            body: JSON.stringify({ \"username\": email, \"password\": password, \"grant_type\": \"password_grant\" })\n        };\n\n        // fetch('http://cloudapp.aws.com:9000/apni-sec/api/login', requestHeaders).then(res => res.json()).then((data) => {\n            // setResponse(data)\n            if(email === \"admin\"){\n                setValidCred(\"true\")\n                setResponse({user: \"admin\", isOnboarded: true })\n            } else if(email === \"admin1\"){\n                setValidCred(\"true\")\n                setResponse({user: \"admin1\", isOnboarded: false })\n            }\n           // data.token.length > 10 ? setValidCred(\"true\") : setValidCred(\"false\")\n        // })\n    }\n    if (success === \"true\") {\n        return <Redirect to={{\n            pathname: '/',\n            state: { data: response }\n        }} />\n    }\n    return (\n        <MDBContainer fluid>\n            <MDBRow style={{ height: \"100vh\" }}> \n                <MDBCol sm=\"1\" lg=\"4\" style={{ backgroundColor: \"#2bbbad\", opacity: \"0.7\"}}>\n                </MDBCol>\n                <MDBCol sm=\"11\" lg=\"8\" >\n                    <MDBContainer style={{ marginTop: \"20vh\", marginLeft: \"8vh\"  }}>\n                        <MDBRow>\n                        <p style={{ marginBottom: \"10vh\", fontWeight: 700 }} className=\"h1 text-center\"><span style={{fontWeight: 600, fontSize: \"45px\" }}>O</span>nboard to Watcher</p>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"5\">\n                                <form>\n                                    <div className=\"grey-text\">\n                                        <MDBInput label=\"Type your username\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\n                                            value={email} onChange={e => setEmail((e.target as any).value)} success=\"right\" />\n                                        <MDBInput label=\"Type your password\" icon=\"lock\" group type=\"password\" validate\n                                            value={password} onChange={e => setPassword((e.target as any).value)} />\n                                    </div>\n                                    <div>\n                                        <MDBBtn color=\"dark\"\n                                            onClick={() => Login()}>Login</MDBBtn>\n                                    </div>\n                                    <p style={{ marginTop: \"5vh\" }} className=\"mb-4\">Unable to login ? <a href=\"/Signup\" style={{ textDecoration: \"underline\"}}>Contact us</a></p>\n                                </form>\n                            </MDBCol>\n                        </MDBRow>\n                    </MDBContainer>\n                </MDBCol>\n            </MDBRow>\n            </MDBContainer>\n    );\n}"]},"metadata":{},"sourceType":"module"}