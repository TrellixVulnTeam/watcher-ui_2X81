{"ast":null,"code":"import React,{useEffect}from\"react\";import{Redirect}from'react-router';import{MDBContainer,MDBRow}from\"mdbreact\";import\"./style.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var PhaseSelector=function PhaseSelector(props){// const [AccountList, setAccountList] = useState([props.Account]);\n// const accountList: any = new Array();\nconsole.log(props);useEffect(function(){console.log(\"re-render\");props.AccountToggle(\"quarter-1\");// for(let key in res){\n//     console.log(props.Account)\n//     console.log(res[key]);\n//     accountList.push(res[key]);\n// }\n},[]);var AccountT=function AccountT(e){console.log(e.target.value);var newAccount=e.target.value;props.AccountToggle(newAccount);};// console.log(AccountList)\nconsole.log(props.account);var token=localStorage.getItem(\"token\");console.log(\"accountSelector\");if(token===null||token===undefined||token.length<0){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/login'}});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(MDBContainer,{fluid:true,style:{paddingTop:\"2vw\",paddingLeft:\"2vw\"},children:/*#__PURE__*/_jsx(MDBRow,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"select\",{className:\"custom-select\",style:{width:\"250px\"},onChange:function onChange(e){return AccountT(e);},value:props.account,children:[/*#__PURE__*/_jsx(\"option\",{value:\"quarter-1\",children:\"Quarter-1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"quarter-2\",children:\"Quarter-2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"quarter-3\",children:\"Quarter-3\"}),/*#__PURE__*/_jsx(\"option\",{value:\"quarter-4\",children:\"Quarter-4\"})]})})})})});};","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/dashboard/PhaseSelector.tsx"],"names":["React","useEffect","Redirect","MDBContainer","MDBRow","PhaseSelector","props","console","log","AccountToggle","AccountT","e","target","value","newAccount","account","token","localStorage","getItem","undefined","length","pathname","paddingTop","paddingLeft","width"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAkCC,SAAlC,KAAmD,OAAnD,CACA,OAASC,QAAT,KAAyB,cAAzB,CAEA,OAQIC,YARJ,CAYIC,MAZJ,KAuBO,UAvBP,CA0BA,MAAO,aAAP,C,6IAGA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAgB,CACzC;AACA;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAL,SAAS,CAAC,UAAM,CACRM,OAAO,CAACC,GAAR,CAAY,WAAZ,EACAF,KAAK,CAACG,aAAN,CAAoB,WAApB,EACA;AACA;AACA;AACA;AACA;AACP,CARQ,CAQN,EARM,CAAT,CAUA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAY,CACzBJ,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACC,MAAF,CAASC,KAArB,EACA,GAAMC,CAAAA,UAAU,CAAGH,CAAC,CAACC,MAAF,CAASC,KAA5B,CACAP,KAAK,CAACG,aAAN,CAAoBK,UAApB,EACH,CAJD,CAKA;AACAP,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACS,OAAlB,EACA,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACAX,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACA,GAAIQ,KAAK,GAAK,IAAV,EAAkBA,KAAK,GAAKG,SAA5B,EAAyCH,KAAK,CAACI,MAAN,CAAe,CAA5D,CAA+D,CAC3D,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,CACjBC,QAAQ,CAAE,QADO,CAAd,EAAP,CAGH,CACD,mBACI,sCACI,KAAC,YAAD,EAAc,KAAK,KAAnB,CAAoB,KAAK,CAAE,CAAEC,UAAU,CAAE,KAAd,CAAqBC,WAAW,CAAE,KAAlC,CAA3B,uBACI,KAAC,MAAD,wBACI,kCACI,gBAAQ,SAAS,CAAC,eAAlB,CAAkC,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAzC,CAA6D,QAAQ,CAAE,kBAACb,CAAD,QAAYD,CAAAA,QAAQ,CAACC,CAAD,CAApB,EAAvE,CAAgG,KAAK,CAAEL,KAAK,CAACS,OAA7G,wBACS,eAAQ,KAAK,CAAC,WAAd,uBADT,cAES,eAAQ,KAAK,CAAC,WAAd,uBAFT,cAGS,eAAQ,KAAK,CAAC,WAAd,uBAHT,cAIS,eAAQ,KAAK,CAAC,WAAd,uBAJT,GADJ,EADJ,EADJ,EADJ,EADJ,CAgBH,CA5CM","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBProgress,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBreadcrumb,\n    MDBBreadcrumbItem\n} from \"mdbreact\";\nimport { useHistory } from \"react-router\";\nimport { Chart } from \"react-google-charts\";\nimport \"./style.css\";\nimport domain from '../../assets/images/domain.png'\nimport { fetchData } from '../../services/apiConfig'\nexport const PhaseSelector = (props: any) => {\n    // const [AccountList, setAccountList] = useState([props.Account]);\n    // const accountList: any = new Array();\n    console.log(props)\n    useEffect(() => {\n            console.log(\"re-render\")\n            props.AccountToggle(\"quarter-1\")\n            // for(let key in res){\n            //     console.log(props.Account)\n            //     console.log(res[key]);\n            //     accountList.push(res[key]);\n            // }\n    }, []);\n    \n    const AccountT = (e: any) => {\n        console.log(e.target.value)\n        const newAccount = e.target.value;\n        props.AccountToggle(newAccount);\n    }\n    // console.log(AccountList)\n    console.log(props.account)\n    const token = localStorage.getItem(\"token\");\n    console.log(\"accountSelector\")\n    if (token === null || token === undefined || token.length < 0) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n    return (\n        <>\n            <MDBContainer fluid style={{ paddingTop: \"2vw\", paddingLeft: \"2vw\" }}>\n                <MDBRow>\n                    <div>\n                        <select className=\"custom-select\" style={{ width: \"250px\" }} onChange={(e: any) => AccountT(e)} value={props.account}>\n                                 <option value=\"quarter-1\">Quarter-1</option>\n                                 <option value=\"quarter-2\">Quarter-2</option>\n                                 <option value=\"quarter-3\">Quarter-3</option>\n                                 <option value=\"quarter-4\">Quarter-4</option>\n                        </select>\n                    </div>\n                </MDBRow>\n            </MDBContainer>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}