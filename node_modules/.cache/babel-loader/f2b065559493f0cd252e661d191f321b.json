{"ast":null,"code":"import _slicedToArray from\"/Users/ankitadixit/Documents/watcher-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Charts from\"react-apexcharts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var GradeChart=function GradeChart(props){var _useState=useState({series:props.value?[props.value]:[80],options:{chart:{offsetY:20,sparkline:{enabled:true}},title:{text:props.title?props.title:\"Vulnerability grade\",margin:10,offsetX:0,offsetY:0,floating:false},colors:props.color?props.color:['#787878','#ff9800','#2bbbad'],plotOptions:{radialBar:{startAngle:-90,endAngle:90,track:{background:\"#e7e7e7\",strokeWidth:'97%',margin:5,// margin is in pixels\ndropShadow:{enabled:true,top:2,left:0,color:'#fff',opacity:1,blur:2}},dataLabels:{name:{show:false},value:{offsetY:-2,fontSize:'22px'}}}},grid:{padding:{top:-10}},fill:{opacity:0.95// gradient: {\n//   shade: 'light',\n//   shadeIntensity: 0.4,\n//   inverseColors: false,\n//   opacityFrom: 1,\n//   opacityTo: 1,\n//   stops: [0, 50, 53, 91]\n// },\n},labels:['Average Results']}}),_useState2=_slicedToArray(_useState,2),chartoptions=_useState2[0],setChartoptions=_useState2[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Charts,{options:chartoptions.options,series:chartoptions.series,type:\"radialBar\",width:\"200\"})});};","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/common/GradeChart.tsx"],"names":["React","useState","Charts","GradeChart","props","series","value","options","chart","offsetY","sparkline","enabled","title","text","margin","offsetX","floating","colors","color","plotOptions","radialBar","startAngle","endAngle","track","background","strokeWidth","dropShadow","top","left","opacity","blur","dataLabels","name","show","fontSize","grid","padding","fill","labels","chartoptions","setChartoptions"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAwBC,QAAxB,KAAmD,OAAnD,CAKA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,C,gGACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAgB,eACEH,QAAQ,CAAC,CAC7CI,MAAM,CAAED,KAAK,CAACE,KAAN,CAAc,CAACF,KAAK,CAACE,KAAP,CAAd,CAA8B,CAAC,EAAD,CADO,CAE7CC,OAAO,CAAE,CACPC,KAAK,CAAE,CACLC,OAAO,CAAE,EADJ,CAELC,SAAS,CAAE,CACTC,OAAO,CAAE,IADA,CAFN,CADA,CAOPC,KAAK,CAAE,CACLC,IAAI,CAAET,KAAK,CAACQ,KAAN,CAAcR,KAAK,CAACQ,KAApB,CAA4B,qBAD7B,CAELE,MAAM,CAAE,EAFH,CAGLC,OAAO,CAAE,CAHJ,CAILN,OAAO,CAAE,CAJJ,CAKLO,QAAQ,CAAE,KALL,CAPA,CAeTC,MAAM,CAAEb,KAAK,CAACc,KAAN,CAAad,KAAK,CAACc,KAAnB,CAA2B,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAf1B,CAgBPC,WAAW,CAAE,CACXC,SAAS,CAAE,CACTC,UAAU,CAAE,CAAC,EADJ,CAETC,QAAQ,CAAE,EAFD,CAGTC,KAAK,CAAE,CACLC,UAAU,CAAE,SADP,CAELC,WAAW,CAAE,KAFR,CAGLX,MAAM,CAAE,CAHH,CAGM;AACXY,UAAU,CAAE,CACVf,OAAO,CAAE,IADC,CAEVgB,GAAG,CAAE,CAFK,CAGVC,IAAI,CAAE,CAHI,CAIVV,KAAK,CAAE,MAJG,CAKVW,OAAO,CAAE,CALC,CAMVC,IAAI,CAAE,CANI,CAJP,CAHE,CAgBTC,UAAU,CAAE,CACVC,IAAI,CAAE,CACJC,IAAI,CAAE,KADF,CADI,CAIV3B,KAAK,CAAE,CACLG,OAAO,CAAE,CAAC,CADL,CAELyB,QAAQ,CAAE,MAFL,CAJG,CAhBH,CADA,CAhBN,CA4CPC,IAAI,CAAE,CACJC,OAAO,CAAE,CACPT,GAAG,CAAE,CAAC,EADC,CADL,CA5CC,CAiDPU,IAAI,CAAE,CACJR,OAAO,CAAE,IACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATI,CAjDC,CA4DPS,MAAM,CAAE,CAAC,iBAAD,CA5DD,CAFoC,CAAD,CADV,wCAC/BC,YAD+B,eACjBC,eADiB,eAmEtC,mBACI,sCACI,KAAC,MAAD,EACI,OAAO,CAAED,YAAY,CAAChC,OAD1B,CAEI,MAAM,CAAEgC,YAAY,CAAClC,MAFzB,CAGI,IAAI,CAAC,WAHT,CAII,KAAK,CAAC,KAJV,EADJ,EADJ,CAUH,CA7EM","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n} from \"mdbreact\";\nimport Charts from \"react-apexcharts\";\nexport const GradeChart = (props: any) => {\n    const [chartoptions, setChartoptions] = useState({\n        series: props.value ? [props.value] : [80],\n        options: {\n          chart: {\n            offsetY: 20,\n            sparkline: {\n              enabled: true\n            }\n          },\n          title: {\n            text: props.title ? props.title : \"Vulnerability grade\",\n            margin: 10,\n            offsetX: 0,\n            offsetY: 0,\n            floating: false,\n           \n        },\n        colors: props.color? props.color : ['#787878', '#ff9800', '#2bbbad'],\n          plotOptions: {\n            radialBar: {\n              startAngle: -90,\n              endAngle: 90,\n              track: {\n                background: \"#e7e7e7\",\n                strokeWidth: '97%',\n                margin: 5, // margin is in pixels\n                dropShadow: {\n                  enabled: true,\n                  top: 2,\n                  left: 0,\n                  color: '#fff',\n                  opacity: 1,\n                  blur: 2\n                }\n              },\n              dataLabels: {\n                name: {\n                  show: false\n                },\n                value: {\n                  offsetY: -2,\n                  fontSize: '22px'\n                }\n              }\n            }\n          },\n          grid: {\n            padding: {\n              top: -10\n            }\n          },\n          fill: {\n            opacity: 0.95\n            // gradient: {\n            //   shade: 'light',\n            //   shadeIntensity: 0.4,\n            //   inverseColors: false,\n            //   opacityFrom: 1,\n            //   opacityTo: 1,\n            //   stops: [0, 50, 53, 91]\n            // },\n          },\n          labels: ['Average Results'],\n        },\n    });\n   \n    return (\n        <>\n            <Charts\n                options={chartoptions.options}\n                series={chartoptions.series}\n                type=\"radialBar\"\n                width=\"200\"\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}