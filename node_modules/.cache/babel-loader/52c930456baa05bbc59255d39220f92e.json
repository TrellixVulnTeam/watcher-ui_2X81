{"ast":null,"code":"import _slicedToArray from\"/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Redirect}from'react-router';import{MDBBtn,MDBCol,MDBContainer,MDBIcon,MDBRow,MDBBreadcrumbItem,MDBBreadcrumb,MDBBadge}from\"mdbreact\";import\"./style.css\";import{fetchData}from'../../services/apiConfig';import{AccountsSelector}from\"./AccountsSelector\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Services=function Services(props){var token=localStorage.getItem(\"token\");console.log(props);var _useState=useState([{criticalCount:0,highCount:0,lowCount:0,mediumCount:0,name:\"ElasticBeanstalk_Environment\",rootAccount:\"231316253142\",totalAvailable:18}]),_useState2=_slicedToArray(_useState,2),services=_useState2[0],setServices=_useState2[1];useEffect(function(){fetchData('services','GET',\"?accountName=\"+props.Account).then(function(res){console.log(res);if(res.message===\"Scanning is in progress..\"){props.SwitchView('scan');}setServices(res);});},[]);var serviceDetail=function serviceDetail(service){console.log(service);props.SwitchView('subservices',service);// fetchData('resources', 'GET', \"?accountName=\" + props.Account + \"&resource=\" + service.name).then((res: any) => {\n//     console.log(res)\n//     if(res.message === \"Scanning is in progress..\"){\n//         props.SwitchView('scan')\n//     } \n// })\n};if(token===null||token===undefined||token.length<0){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/login'}});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(MDBContainer,{fluid:true,className:\"pb-5\",style:{padding:\"2vw\"},children:[/*#__PURE__*/_jsx(MDBRow,{children:/*#__PURE__*/_jsx(MDBCol,{sm:\"11\",md:\"11\",lg:\"11\",style:{padding:\"0px\"},children:/*#__PURE__*/_jsxs(MDBBreadcrumb,{children:[/*#__PURE__*/_jsxs(MDBBtn,{className:\"back\",onClick:function onClick(){return props.SwitchView('assets');},color:\"blue-grey\",style:{border:\"2px solid blue-grey\",borderRadius:\"5px\",marginLeft:\"0px !important\",fontSize:\"8px !important\"},children:[/*#__PURE__*/_jsx(MDBIcon,{icon:\"arrow-left\",style:{fontSize:\"8px\"}}),\" Back\"]}),/*#__PURE__*/_jsx(MDBBreadcrumbItem,{children:\"dashboard\"}),/*#__PURE__*/_jsx(MDBBreadcrumbItem,{children:\"assets\"}),/*#__PURE__*/_jsx(MDBBreadcrumbItem,{active:true,children:\"services\"})]})})}),/*#__PURE__*/_jsx(MDBRow,{children:/*#__PURE__*/_jsx(AccountsSelector,{Account:props.Account,AccountToggle:props.AccountToggle})}),/*#__PURE__*/_jsx(\"div\",{style:{maxHeight:\"75vh\",overflowY:\"auto\",overflowX:\"hidden\"},children:/*#__PURE__*/_jsx(MDBRow,{className:\"awsRow\",children:services.map(function(service){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MDBCol,{className:\"awsServices\",sm:\"3\",md:\"3\",lg:\"3\",children:/*#__PURE__*/_jsxs(MDBRow,{className:\"serviceCard\",onClick:function onClick(){serviceDetail(service);},children:[/*#__PURE__*/_jsx(MDBCol,{sm:\"2\",md:\"2\",lg:\"2\",children:/*#__PURE__*/_jsx(\"img\",{className:\"alignleft\",src:\"  https://e7.pngegg.com/pngimages/868/302/png-clipart-aws-lambda-amazon-web-services-serverless-computing-anonymous-function-node-js-amazon-web-services-logo-angle-text.png\",alt:\"aws\",width:\"40vw\"})}),/*#__PURE__*/_jsxs(MDBCol,{sm:\"10\",md:\"10\",lg:\"10\",children:[/*#__PURE__*/_jsxs(MDBBadge,{className:\"DomainBadge\",color:service.criticalCount+service.highCount+service.lowCount+service.mediumCount>0?\"danger\":\"success\",children:[\" \",service.criticalCount+service.highCount+service.lowCount+service.mediumCount,\" issues\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-dark font-weight-bold\",style:{fontSize:\"15px\",marginBlockEnd:\"0px\"},children:service.name.replace(\"_\",\" \")}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:\"12px\",color:\"#0784eb\",fontWeight:600},children:[service.totalAvailable,\" available\"]}),/*#__PURE__*/_jsx(\"br\",{})]})]})}),/*#__PURE__*/_jsx(MDBCol,{sm:\"1\",md:\"1\",lg:\"1\"})]});})})})]})});};","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/src/components/dashboard/Services.tsx"],"names":["React","useState","useEffect","Redirect","MDBBtn","MDBCol","MDBContainer","MDBIcon","MDBRow","MDBBreadcrumbItem","MDBBreadcrumb","MDBBadge","fetchData","AccountsSelector","Services","props","token","localStorage","getItem","console","log","criticalCount","highCount","lowCount","mediumCount","name","rootAccount","totalAvailable","services","setServices","Account","then","res","message","SwitchView","serviceDetail","service","undefined","length","pathname","padding","border","borderRadius","marginLeft","fontSize","AccountToggle","maxHeight","overflowY","overflowX","map","marginBlockEnd","replace","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBProgress,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBreadcrumbItem,\n    MDBBreadcrumb,\n    MDBBadge\n} from \"mdbreact\";\nimport { useHistory } from \"react-router\";\nimport { Chart } from \"react-google-charts\";\nimport \"./style.css\"\nimport { fetchData } from '../../services/apiConfig'\nimport { AccountsSelector } from \"./AccountsSelector\";\nexport const Services = (props: any) => {\n    const token = localStorage.getItem(\"token\");\n    console.log(props)\n    const [services, setServices] = useState([{\n        criticalCount: 0,\n        highCount: 0,\n        lowCount: 0,\n        mediumCount: 0,\n        name: \"ElasticBeanstalk_Environment\",\n        rootAccount: \"231316253142\",\n        totalAvailable: 18}]);\n    useEffect(() => {\n        fetchData('services', 'GET', \"?accountName=\" + props.Account).then((res: any) => {\n            console.log(res)\n            if(res.message === \"Scanning is in progress..\"){\n                props.SwitchView('scan')\n            } \n            setServices(res)\n        })\n    }, []);\n\n    const serviceDetail = (service:any) => {\n        console.log(service)\n        props.SwitchView('subservices', service)\n        // fetchData('resources', 'GET', \"?accountName=\" + props.Account + \"&resource=\" + service.name).then((res: any) => {\n        //     console.log(res)\n        //     if(res.message === \"Scanning is in progress..\"){\n        //         props.SwitchView('scan')\n        //     } \n        // })\n    }\n\n    if (token === null || token === undefined || token.length < 0) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n    return (\n        <>\n            <MDBContainer fluid className=\"pb-5\" style={{ padding: \"2vw\" }}>\n                <MDBRow>\n                    <MDBCol sm=\"11\" md=\"11\" lg=\"11\" style={{ padding: \"0px\" }}>\n                        <MDBBreadcrumb >\n                            <MDBBtn className=\"back\" onClick={() => props.SwitchView('assets')} color=\"blue-grey\" style={{ border: \"2px solid blue-grey\", borderRadius: \"5px\", marginLeft: \"0px !important\", fontSize: \"8px !important\" }}>\n                                <MDBIcon icon=\"arrow-left\" style={{ fontSize: \"8px\" }} /> Back</MDBBtn>\n                            <MDBBreadcrumbItem>dashboard</MDBBreadcrumbItem>\n                            <MDBBreadcrumbItem>assets</MDBBreadcrumbItem>\n                            <MDBBreadcrumbItem active>services</MDBBreadcrumbItem>\n                        </MDBBreadcrumb>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                <AccountsSelector Account={props.Account} AccountToggle={props.AccountToggle} />\n                </MDBRow>\n                <div style={{ maxHeight: \"75vh\", overflowY: \"auto\", overflowX: \"hidden\" }}>\n                    <MDBRow className=\"awsRow\">\n\n                        {\n                            services.map((service: any) =>\n                                <>\n                                    <MDBCol className=\"awsServices\" sm=\"3\" md=\"3\" lg=\"3\" >\n                                        <MDBRow className=\"serviceCard\" onClick={() => { serviceDetail(service)}} >\n                                            <MDBCol sm=\"2\" md=\"2\" lg=\"2\" >\n                                            <img className=\"alignleft\" src=\"  https://e7.pngegg.com/pngimages/868/302/png-clipart-aws-lambda-amazon-web-services-serverless-computing-anonymous-function-node-js-amazon-web-services-logo-angle-text.png\" alt=\"aws\" width={\"40vw\"} /> \n                                            </MDBCol>\n                                            <MDBCol sm=\"10\" md=\"10\" lg=\"10\" >\n                                              <MDBBadge className=\"DomainBadge\" color={service.criticalCount + service.highCount + service.lowCount + service.mediumCount > 0 ? \"danger\" : \"success\"}> {service.criticalCount + service.highCount + service.lowCount + service.mediumCount} issues</MDBBadge> \n                                                <p className='text-dark font-weight-bold' style={{ fontSize: \"15px\", marginBlockEnd: \"0px\" }}>{service.name.replace(\"_\", \" \")}</p>\n                                                {/* <p className='text-dark' style={{ fontSize: \"12px\", marginLeft: \"10px\" }}>{service.totalAvailable} available</p> */}\n                                                <span style={{ fontSize: \"12px\", color: \"#0784eb\", fontWeight: 600 }}>{ service.totalAvailable} available</span>\n                                               <br />\n                                                {/* <span style={{ fontSize: \"12px\", color: \"#dc3912\", fontWeight: 600 }}>{service.criticalCount} critical issues</span> */}\n                                                {/* <br /> */}\n                                            </MDBCol>\n                                        </MDBRow>\n                                    </MDBCol>\n                                    <MDBCol sm=\"1\" md=\"1\" lg=\"1\" ></MDBCol>\n                                </>\n                            )\n                        }\n                        {/* <img className=\"alignleft\" src={\"https://cdn.mindmajix.com/blog/images/aws-\" + service.name.split(\"_\")[0].toLowerCase() + \"-010621.webp\"} alt=\"Amazon S3\" width={\"40vw\"} /> */}\n                    </MDBRow>\n                </div>\n            </MDBContainer>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}