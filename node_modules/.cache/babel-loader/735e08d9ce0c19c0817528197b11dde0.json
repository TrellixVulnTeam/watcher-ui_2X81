{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ankitadixit/Documents/watcher-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ankitadixit/Documents/watcher-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{authToken}from'./auth';export var getHeaders=function getHeaders(){var headers;headers={'Accept':'application/json','Content-Type':'application/json','Authorization':'Bearer '+authToken()};console.log(headers);return headers;};export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoint,method,body){var response,config,_config,_config2;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(method===\"POST\")){_context.next=8;break;}config={'method':method,'headers':getHeaders(),'body':JSON.stringify(body)};console.log(config);_context.next=5;return fetch('https://api.thewatcher.live//'+endpoint,config).then(function(res){return res.json();}).then(function(data){console.log(data);return data;});case 5:response=_context.sent;_context.next=19;break;case 8:if(!(method===\"GET\"&&body!==undefined)){_context.next=15;break;}_config={'method':method,'headers':getHeaders()};_context.next=12;return fetch('https://api.thewatcher.live//'+endpoint+body,_config).then(function(res){return res.json();}).then(function(data){console.log(data);return data;});case 12:response=_context.sent;_context.next=19;break;case 15:_config2={'method':method,'headers':getHeaders()};_context.next=18;return fetch('https://api.thewatcher.live//'+endpoint,_config2).then(function(res){return res.json();}).then(function(data){console.log(data);return data;});case 18:response=_context.sent;case 19:return _context.abrupt(\"return\",response);case 20:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(_x,_x2,_x3){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/services/apiConfig.ts"],"names":["authToken","getHeaders","headers","console","log","fetchData","endpoint","method","body","config","JSON","stringify","fetch","then","res","json","data","response","undefined"],"mappings":"yTAAA,OAASA,SAAT,KAA0B,QAA1B,CAGA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC5B,GAAIC,CAAAA,OAAJ,CACAA,OAAO,CAAG,CACN,SAAW,kBADL,CAEN,eAAgB,kBAFV,CAGN,gBAAiB,UAAYF,SAAS,EAHhC,CAAV,CAKAG,OAAO,CAACC,GAAR,CAAYF,OAAZ,EACA,MAAOA,CAAAA,OAAP,CACH,CATM,CAWP,MAAO,IAAMG,CAAAA,SAAS,0FAAG,iBAAOC,QAAP,CAAsBC,MAAtB,CAAmCC,IAAnC,4JAGlBD,MAAM,GAAK,MAHO,0BAIXE,MAJW,CAIF,CACX,SAAUF,MADC,CAEX,UAAWN,UAAU,EAFV,CAGX,OAAQS,IAAI,CAACC,SAAL,CAAeH,IAAf,CAHG,CAJE,CASjBL,OAAO,CAACC,GAAR,CAAYK,MAAZ,EATiB,sBAUJG,CAAAA,KAAK,CAAC,gCAAkCN,QAAnC,CAA8CG,MAA9C,CAAL,CAA4DI,IAA5D,CAAiE,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAApE,EAAoFF,IAApF,CAAyF,SAACG,IAAD,CAAU,CAChHb,OAAO,CAACC,GAAR,CAAYY,IAAZ,EACA,MAAOA,CAAAA,IAAP,CACH,CAHgB,CAVI,QAUrBC,QAVqB,kDAehBV,MAAM,GAAK,KAAX,EAAoBC,IAAI,GAAKU,SAfb,2BAgBfT,OAhBe,CAgBN,CACX,SAAUF,MADC,CAEX,UAAWN,UAAU,EAFV,CAhBM,wBAoBJW,CAAAA,KAAK,CAAC,gCAAkCN,QAAlC,CAA6CE,IAA9C,CAAqDC,OAArD,CAAL,CAAmEI,IAAnE,CAAwE,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAA3E,EAA2FF,IAA3F,CAAgG,SAACG,IAAD,CAAU,CACvHb,OAAO,CAACC,GAAR,CAAYY,IAAZ,EACA,MAAOA,CAAAA,IAAP,CACH,CAHgB,CApBI,SAoBrBC,QApBqB,8CA0BfR,QA1Be,CA0BN,CACX,SAAUF,MADC,CAEX,UAAWN,UAAU,EAFV,CA1BM,wBA8BJW,CAAAA,KAAK,CAAC,gCAAkCN,QAAnC,CAA+CG,QAA/C,CAAL,CAA6DI,IAA7D,CAAkE,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAArE,EAAqFF,IAArF,CAA0F,SAACG,IAAD,CAAU,CACjHb,OAAO,CAACC,GAAR,CAAYY,IAAZ,EACA,MAAOA,CAAAA,IAAP,CACH,CAHgB,CA9BI,SA8BrBC,QA9BqB,uDAoCdA,QApCc,yDAAH,kBAATZ,CAAAA,SAAS,oDAAf","sourcesContent":["import { authToken } from './auth'\nimport { Redirect } from 'react-router';\n\nexport const getHeaders = () => {\n    let headers: any;\n    headers = {\n        'Accept' : 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + authToken(),\n    } \n    console.log(headers);\n    return headers\n}\n\nexport const fetchData = async (endpoint: any, method: any, body?: any) => {\n    let response: any\n   \n    if(method === \"POST\"){\n        const config = {\n            'method': method,\n            'headers': getHeaders(),\n            'body': JSON.stringify(body),\n        }\n        console.log(config)\n    response = await fetch('https://api.thewatcher.live//' + endpoint,  config ).then(res => res.json()).then((data) => {\n        console.log(data)\n        return data\n    })\n    }\n else if(method === \"GET\" && body !== undefined) {\n    const config = {\n        'method': method,\n        'headers': getHeaders(),\n    }\n    response = await fetch('https://api.thewatcher.live//' + endpoint + body,  config ).then(res => res.json()).then((data) => {\n        console.log(data)\n        return data\n    })\n } \n else {\n    const config = {\n        'method': method,\n        'headers': getHeaders(),\n    }\n    response = await fetch('https://api.thewatcher.live//' + endpoint ,  config ).then(res => res.json()).then((data) => {\n        console.log(data)\n        return data\n    })\n }\n\n    return response;\n}"]},"metadata":{},"sourceType":"module"}