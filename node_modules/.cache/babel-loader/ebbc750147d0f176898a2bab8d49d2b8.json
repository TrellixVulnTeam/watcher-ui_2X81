{"ast":null,"code":"import _slicedToArray from\"/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Redirect}from'react-router';import{MDBCol,MDBContainer,MDBIcon,MDBRow,MDBView,MDBMask}from\"mdbreact\";import\"./style.css\";import{Chart}from\"../common/VulnChart\";import{CategoryChart}from\"../common/VulnCatChart\";import{OrgChart}from\"../common/OrgChart\";import{GradeChart}from\"../common/GradeChart\";import{fetchData}from'../../services/apiConfig';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Home=function Home(props){var _useState=useState({\"trial_days_remaining\":15,\"metrics\":{\"vapt\":{\"categories\":{},\"count\":{criticalCount:0,highCount:0,mediumCount:0,lowCount:0}},\"domains\":{\"defaultAccount\":\"657657575\"}}}),_useState2=_slicedToArray(_useState,2),dashboardKPI=_useState2[0],setDashboardKPI=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pentestSeries=_useState4[0],setpentestSeries=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),domainSeries=_useState6[0],setdomainSeries=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),servicesSeries=_useState8[0],setservicesSeries=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),pentestSeriesCategory=_useState10[0],setpentestSeriesCategory=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),domainsSeriesCategory=_useState12[0],setdomainsSeriesCategory=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),servicesSeriesCategory=_useState14[0],setservicesSeriesCategory=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),pentestSeriesCategoryCount=_useState16[0],setpentestSeriesCategoryCount=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),domiansSeriesCategoryCount=_useState18[0],setdomiansSeriesCategoryCount=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),servicesSeriesCategoryCount=_useState20[0],setservicesSeriesCategoryCount=_useState20[1];var _useState21=useState(''),_useState22=_slicedToArray(_useState21,2),signature=_useState22[0],setSignature=_useState22[1];var token=localStorage.getItem(\"token\");console.log(props);useEffect(function(){var pentestSeries;var domainSeries;var servicesSeries;var pentestSeriesCategory;var pentestSeriesCategoryCount;var domainsSeriesCategory;var domiansSeriesCategoryCount;var servicesSeriesCategory;var servicesSeriesCategoryCount;fetchData('dashboard','GET').then(function(res){setDashboardKPI(res);if(res.message){if(res.message.indexOf(\"Error\")!==-1){localStorage.clear();setSignature('0');}}else if(JSON.stringify(res)!==JSON.stringify(props.Kpi)){setDashboardKPI(res);if(res.metrics.vapt!==undefined){if(res.metrics.vapt.categories!==undefined){pentestSeries=[res.metrics.vapt.count.criticalCount,res.metrics.vapt.count.highCount,res.metrics.vapt.count.mediumCount,res.metrics.vapt.count.lowCount];setpentestSeries(pentestSeries);var sortable=[];for(var _i=0,_Object$entries=Object.entries(res.metrics.vapt.categories);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];sortable.push([key,value]);}sortable.sort(function(a,b){return b[1]-a[1];});pentestSeriesCategory=[sortable[0][0],sortable[1][0],sortable[2][0]];setpentestSeriesCategory(pentestSeriesCategory);pentestSeriesCategoryCount=[sortable[0][1],sortable[1][1],sortable[2][1]];setpentestSeriesCategoryCount(pentestSeriesCategoryCount);}}if(res.metrics.domains.count!==undefined){domainSeries=[res.metrics.domains.count.criticalCount,res.metrics.domains.count.highCount,res.metrics.domains.count.mediumCount,res.metrics.domains.count.lowCount];setdomainSeries(domainSeries);var sortableDomains=[];for(var _i2=0,_Object$entries2=Object.entries(res.metrics.domains.categories);_i2<_Object$entries2.length;_i2++){var _Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),_key=_Object$entries2$_i[0],_value=_Object$entries2$_i[1];sortableDomains.push([_key,_value]);}sortableDomains.sort(function(a,b){return b[1]-a[1];});domainsSeriesCategory=[sortableDomains[0][0],sortableDomains[1][0],sortableDomains[2][0]];setdomainsSeriesCategory(domainsSeriesCategory);domiansSeriesCategoryCount=[sortableDomains[0][1],sortableDomains[1][1],sortableDomains[2][1]];setdomiansSeriesCategoryCount(domiansSeriesCategoryCount);}if(res.metrics.services.count!==undefined){servicesSeries=[res.metrics.services.count.criticalCount,res.metrics.services.count.highCount,res.metrics.services.count.mediumCount,res.metrics.services.count.lowCount];setservicesSeries(servicesSeries);var sortableServices=[];for(var _i3=0,_Object$entries3=Object.entries(res.metrics.services.categories);_i3<_Object$entries3.length;_i3++){var _Object$entries3$_i=_slicedToArray(_Object$entries3[_i3],2),_key2=_Object$entries3$_i[0],_value2=_Object$entries3$_i[1];sortableServices.push([_key2,_value2]);}sortableServices.sort(function(a,b){return b[1]-a[1];});servicesSeriesCategory=[sortableServices[0][0],sortableServices[1][0],sortableServices[2][0]];setservicesSeriesCategory(servicesSeriesCategory);servicesSeriesCategoryCount=[sortableServices[0][1],sortableServices[1][1],sortableServices[2][1]];setservicesSeriesCategoryCount(servicesSeriesCategoryCount);}}else{if(props.Kpi.metrics.vapt!==undefined){if(props.Kpi.metrics.vapt.categories!==undefined){pentestSeries=[props.Kpi.metrics.vapt.count.criticalCount,props.Kpi.metrics.vapt.count.highCount,props.Kpi.metrics.vapt.count.mediumCount,props.Kpi.metrics.vapt.count.lowCount];setpentestSeries(pentestSeries);var _sortable=[];for(var _i4=0,_Object$entries4=Object.entries(res.metrics.vapt.categories);_i4<_Object$entries4.length;_i4++){var _Object$entries4$_i=_slicedToArray(_Object$entries4[_i4],2),_key3=_Object$entries4$_i[0],_value3=_Object$entries4$_i[1];_sortable.push([_key3,_value3]);}_sortable.sort(function(a,b){return b[1]-a[1];});pentestSeriesCategory=[_sortable[0][0],_sortable[1][0],_sortable[2][0]];setpentestSeriesCategory(pentestSeriesCategory);pentestSeriesCategoryCount=[_sortable[0][1],_sortable[1][1],_sortable[2][1]];setpentestSeriesCategoryCount(pentestSeriesCategoryCount);}if(res.metrics.domains.count!==undefined){domainSeries=[res.metrics.domains.count.criticalCount,res.metrics.domains.count.highCount,res.metrics.domains.count.mediumCount,res.metrics.domains.count.lowCount];setdomainSeries(domainSeries);var _sortableDomains=[];for(var _i5=0,_Object$entries5=Object.entries(res.metrics.domains.categories);_i5<_Object$entries5.length;_i5++){var _Object$entries5$_i=_slicedToArray(_Object$entries5[_i5],2),_key4=_Object$entries5$_i[0],_value4=_Object$entries5$_i[1];_sortableDomains.push([_key4,_value4]);}_sortableDomains.sort(function(a,b){return b[1]-a[1];});domainsSeriesCategory=[_sortableDomains[0][0],_sortableDomains[1][0],_sortableDomains[2][0]];setdomainsSeriesCategory(domainsSeriesCategory);domiansSeriesCategoryCount=[_sortableDomains[0][1],_sortableDomains[1][1],_sortableDomains[2][1]];setdomiansSeriesCategoryCount(domiansSeriesCategoryCount);if(res.metrics.services.count!==undefined){servicesSeries=[res.metrics.services.count.criticalCount,res.metrics.services.count.highCount,res.metrics.services.count.mediumCount,res.metrics.services.count.lowCount];setservicesSeries(servicesSeries);var _sortableServices=[];for(var _i6=0,_Object$entries6=Object.entries(res.metrics.services.categories);_i6<_Object$entries6.length;_i6++){var _Object$entries6$_i=_slicedToArray(_Object$entries6[_i6],2),_key5=_Object$entries6$_i[0],_value5=_Object$entries6$_i[1];_sortableServices.push([_key5,_value5]);}_sortableServices.sort(function(a,b){return b[1]-a[1];});servicesSeriesCategory=[_sortableServices[0][0],_sortableServices[1][0],_sortableServices[2][0]];setservicesSeriesCategory(servicesSeriesCategory);servicesSeriesCategoryCount=[_sortableServices[0][1],_sortableServices[1][1],_sortableServices[2][1]];setservicesSeriesCategoryCount(servicesSeriesCategoryCount);}}}}console.log(domainSeries);});},[]);if(signature==='0'||token===null||token===undefined||token==='undefined'||token.length<0){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/login'}});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(MDBContainer,{fluid:true,className:\"pt-5 pb-5\",style:{padding:\"20px\"},children:props.iswatcher===true?/*#__PURE__*/_jsxs(MDBRow,{children:[/*#__PURE__*/_jsxs(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:[/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"ptest\",children:[/*#__PURE__*/_jsxs(\"h4\",{style:{fontWeight:800},children:[\"Organisation health\",/*#__PURE__*/_jsx(\"span\",{className:\"text-light\",style:{fontSize:\"11px\",marginLeft:\"10px\",paddingTop:\"10px\"},children:\"Last synced on September 10 23:04\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"12px\",paddingTop:\"8px\"},children:\"This pentest is an authorized simulated cyberattack on the primary service of the organisation, performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\"}),/*#__PURE__*/_jsxs(MDBRow,{children:[/*#__PURE__*/_jsx(MDBCol,{sm:\"4\",md:\"4\",lg:\"4\",children:/*#__PURE__*/_jsx(OrgChart,{})}),/*#__PURE__*/_jsx(MDBCol,{sm:\"8\",md:\"8\",lg:\"8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"gradechart\",style:{display:\"inline-flex\",minHeight:\"130px\"},children:[/*#__PURE__*/_jsx(GradeChart,{title:\"Assets grade\",value:100}),/*#__PURE__*/_jsx(GradeChart,{title:\"Domains grade\",value:70,offsetX:-50})]})})]})]})}),/*#__PURE__*/_jsx(\"br\",{}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"ptest\",style:{cursor:\"pointer\",border:\"1px solid mistyrose\"},onClick:function onClick(){props.SwitchView('domains');},children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"st\",style:{fontWeight:800,backgroundColor:\"rgb(255,228,225, 0.6)\"},children:[\"Organization Domains\",/*#__PURE__*/_jsx(MDBIcon,{icon:\"angle-double-right\",style:{fontSize:\"15px\",marginLeft:\"10px\",float:\"right\"}})]}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"12px\",padding:\"10px\"},children:\"Watcher checks on all your domains, monitors organisation assets at scale, regularly checks for misconfigurations for potential hacks and exploits.\"}),/*#__PURE__*/_jsxs(MDBRow,{children:[/*#__PURE__*/_jsx(MDBCol,{sm:\"6\",md:\"6\",lg:\"6\",children:/*#__PURE__*/_jsx(Chart,{color:['#6F4242','#856363','#A96E6E','#CFAFAF'],series:domainSeries,width:250,height:150})}),/*#__PURE__*/_jsxs(MDBCol,{sm:\"6\",md:\"6\",lg:\"6\",children:[\"  \",/*#__PURE__*/_jsx(CategoryChart,{series:domiansSeriesCategoryCount,category:domainsSeriesCategory,color:['#CFAFAF','#A96E6E','#6F4242']//  series={[8, 13, 12]}\n})]})]}),/*#__PURE__*/_jsx(\"br\",{})]})}),/*#__PURE__*/_jsx(\"br\",{}),\" \",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsxs(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:[props.isvapt?/*#__PURE__*/_jsxs(\"div\",{className:\"ptest\",style:{cursor:\"pointer\",border:\"1px solid #ededef\"},onClick:function onClick(){props.SwitchView('pentest');},children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"st\",style:{fontWeight:800,cursor:\"pointer\"},children:[\"Vulnerability Assessment\",/*#__PURE__*/_jsx(MDBIcon,{icon:\"angle-double-right\",style:{fontSize:\"15px\",marginLeft:\"10px\",float:\"right\"}})]}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"12px\",padding:\"10px\"},children:\"This pentest is an authorized simulated cyberattack on the primary service of the organisation, performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\"}),/*#__PURE__*/_jsxs(MDBRow,{children:[/*#__PURE__*/_jsxs(MDBCol,{sm:\"6\",md:\"6\",lg:\"6\",children:[/*#__PURE__*/_jsx(Chart,{series:pentestSeries,width:250,height:150}),\" \"]}),pentestSeriesCategoryCount.length>0?/*#__PURE__*/_jsx(MDBCol,{sm:\"6\",md:\"6\",lg:\"6\",children:/*#__PURE__*/_jsx(CategoryChart,{series:pentestSeriesCategoryCount,category:pentestSeriesCategory})}):/*#__PURE__*/_jsx(_Fragment,{})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"ptest\",style:{cursor:\"pointer\"},onClick:function onClick(){props.SwitchView('pentest');},children:[/*#__PURE__*/_jsx(\"h6\",{style:{fontWeight:800},children:\"Vulnerability Assessment\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"12px\"},children:\"This pentest is an authorized simulated cyberattack on the primary service of the organisation, performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\"}),/*#__PURE__*/_jsxs(MDBView,{style:{border:\"1px solid #fff\"},children:[/*#__PURE__*/_jsxs(MDBRow,{style:{opacity:0.4},children:[/*#__PURE__*/_jsx(MDBCol,{sm:\"6\",md:\"6\",lg:\"6\",children:/*#__PURE__*/_jsx(Chart,{color:['#808080','#818589','#71797E','#899499'],width:250,height:150,series:[6,23,14,21]})}),/*#__PURE__*/_jsxs(MDBCol,{sm:\"6\",md:\"6\",lg:\"6\",children:[\"  \",/*#__PURE__*/_jsx(CategoryChart,{color:['#808080','#818589','#71797E','#899499'],series:[5,3,3]})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(MDBMask,{overlay:\"white-strong\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(MDBIcon,{style:{color:\"#2bbbad\",cursor:\"pointer\"},size:\"1x\",icon:\"lock\"})})})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"ptest\",style:{cursor:\"pointer\",border:\"1px solid rgba(124, 192, 216, 0.3)\"},onClick:function onClick(){props.SwitchView('services');},children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"st\",style:{fontWeight:800,backgroundColor:\"rgba(124, 192, 216, 0.2)\"},children:[\"Cloud Services\",/*#__PURE__*/_jsx(MDBIcon,{icon:\"angle-double-right\",style:{fontSize:\"15px\",marginLeft:\"10px\",float:\"right\"}})]}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"12px\",padding:\"10px\"},children:\"Watcher keeps eye on all your cloud services, monitors organisation assets at scale, regularly checks for misconfigurations for potential hacks and exploits.\"}),/*#__PURE__*/_jsxs(MDBRow,{children:[/*#__PURE__*/_jsx(MDBCol,{sm:\"6\",md:\"6\",lg:\"6\",children:/*#__PURE__*/_jsx(Chart,{series:servicesSeries,color:['#0f3c4c','#1e7898','#2596be','#7cc0d8'],width:250,height:150})}),/*#__PURE__*/_jsxs(MDBCol,{sm:\"6\",md:\"6\",lg:\"6\",children:[\"  \",/*#__PURE__*/_jsx(CategoryChart,{series:servicesSeriesCategoryCount,category:servicesSeriesCategory,color:['#0f3c4c','#1e7898','#2596be','#7cc0d8']// color={['#CFAFAF', '#A96E6E', '#6F4242']} \n//  series={[5, 3, 3]} \n})]})]}),/*#__PURE__*/_jsx(\"br\",{})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]})]}):/*#__PURE__*/_jsxs(MDBRow,{style:{minHeight:\"80vh\"},children:[/*#__PURE__*/_jsxs(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:[/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h5\",{style:{fontWeight:800},children:[\"Organisation health\",/*#__PURE__*/_jsx(\"span\",{className:\"text-light\",style:{fontSize:\"9px\",marginLeft:\"10px\",paddingTop:\"10px\"},children:\"Last synced on September 30 23:04\"})]}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"12px\",paddingTop:\"8px\"},children:\"This pentest is an authorized simulated cyberattack on the primary service of the organisation, performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(MDBView,{children:[/*#__PURE__*/_jsxs(MDBRow,{style:{opacity:0.4},children:[/*#__PURE__*/_jsx(MDBCol,{sm:\"12\",md:\"12\",lg:\"4\",children:/*#__PURE__*/_jsx(OrgChart,{color:['#808080']})}),/*#__PURE__*/_jsx(MDBCol,{sm:\"12\",md:\"12\",lg:\"8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"gradechart\",style:{display:\"inline-flex\",minHeight:\"130px\"},children:[/*#__PURE__*/_jsx(GradeChart,{color:['#808080'],title:\"Assets grade\",value:90}),/*#__PURE__*/_jsx(GradeChart,{color:['#808080'],title:\"Domains grade\",value:70,offsetX:-50})]})})]}),/*#__PURE__*/_jsx(MDBMask,{overlay:\"white-light\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(MDBIcon,{style:{color:\"#2bbbad\",cursor:\"pointer\"},size:\"1x\",icon:\"lock\"})})})]})]}),/*#__PURE__*/_jsx(\"br\",{}),\"   \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(MDBRow,{children:/*#__PURE__*/_jsx(MDBCol,{sm:\"12\",md:\"12\",lg:\"12\",style:{border:\"1px solid #fff\"},children:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"ptest\",style:{cursor:\"pointer\"},onClick:function onClick(){props.SwitchView('pentest');},children:[/*#__PURE__*/_jsx(\"h6\",{style:{fontWeight:800},children:\"Organization Domains\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"12px\"},children:\"Watcher checks on all your domains, monitors organisation assets at scale, regularly checks for misconfigurations for potential hacks and exploits.\"}),/*#__PURE__*/_jsxs(MDBView,{style:{border:\"1px solid #fff\"},children:[/*#__PURE__*/_jsxs(MDBRow,{style:{opacity:0.4},children:[/*#__PURE__*/_jsx(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:/*#__PURE__*/_jsx(Chart,{color:['#808080','#818589','#71797E','#899499'],width:250,height:150,series:[5,13,2,12]})}),/*#__PURE__*/_jsxs(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:[\"  \",/*#__PURE__*/_jsx(CategoryChart,{color:['#808080','#818589','#71797E','#899499'],series:[8,13,12]})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(MDBMask,{overlay:\"white-strong\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(MDBIcon,{style:{color:\"#2bbbad\",cursor:\"pointer\"},size:\"1x\",icon:\"lock\"})})})]})]})})})})})]}),/*#__PURE__*/_jsxs(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:[props.isvapt?/*#__PURE__*/_jsxs(\"div\",{className:\"ptest\",style:{cursor:\"pointer\",border:\"1px solid #ededef\"},onClick:function onClick(){props.SwitchView('pentest');},children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"st\",style:{fontWeight:800,cursor:\"pointer\"},children:[\"Vulnerability Assessment\",/*#__PURE__*/_jsx(MDBIcon,{icon:\"angle-double-right\",style:{fontSize:\"15px\",marginLeft:\"10px\",float:\"right\"}})]}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"12px\",padding:\"10px\"},children:\"This pentest is an authorized simulated cyberattack on the primary service of the organisation, performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\"}),/*#__PURE__*/_jsxs(MDBRow,{children:[/*#__PURE__*/_jsxs(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:[/*#__PURE__*/_jsx(Chart,{series:pentestSeries,width:250,height:150}),\" \"]}),pentestSeriesCategoryCount.length>0?/*#__PURE__*/_jsxs(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:[\"   \",/*#__PURE__*/_jsx(CategoryChart,{series:pentestSeriesCategoryCount,category:pentestSeriesCategory})]}):/*#__PURE__*/_jsx(_Fragment,{})]}),/*#__PURE__*/_jsx(\"br\",{})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"ptest\",style:{cursor:\"pointer\"},onClick:function onClick(){props.SwitchView('pentest');},children:[/*#__PURE__*/_jsx(\"h6\",{style:{fontWeight:800},children:\"Vulnerability Assessment\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"12px\"},children:\"This pentest is an authorized simulated cyberattack on the primary service of the organisation, performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\"}),/*#__PURE__*/_jsxs(MDBView,{style:{border:\"1px solid #fff\"},children:[/*#__PURE__*/_jsxs(MDBRow,{style:{opacity:0.4},children:[/*#__PURE__*/_jsx(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:/*#__PURE__*/_jsx(Chart,{color:['#808080','#818589','#71797E','#899499'],width:250,height:150,series:[6,23,14,21]})}),/*#__PURE__*/_jsxs(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:[\"  \",/*#__PURE__*/_jsx(CategoryChart,{color:['#808080','#818589','#71797E','#899499'],series:[5,3,3]})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(MDBMask,{overlay:\"white-strong\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(MDBIcon,{style:{color:\"#2bbbad\",cursor:\"pointer\"},size:\"1x\",icon:\"lock\"})})})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"ptest\",style:{cursor:\"pointer\"},onClick:function onClick(){props.SwitchView('pentest');},children:[/*#__PURE__*/_jsx(\"h6\",{style:{fontWeight:800},children:\"Cloud Services\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"12px\"},children:\"Watcher keeps eye on all your cloud services, monitors organisation assets at scale, regularly checks for misconfigurations for potential hacks and exploits.\"}),/*#__PURE__*/_jsxs(MDBView,{style:{border:\"1px solid #fff\"},children:[/*#__PURE__*/_jsxs(MDBRow,{style:{opacity:0.4},children:[/*#__PURE__*/_jsx(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:/*#__PURE__*/_jsx(Chart,{color:['#808080','#818589','#71797E','#899499'],width:250,height:150,series:[6,23,14,21]})}),/*#__PURE__*/_jsxs(MDBCol,{sm:\"12\",md:\"12\",lg:\"6\",children:[\"  \",/*#__PURE__*/_jsx(CategoryChart,{color:['#808080','#818589','#71797E','#899499'],series:[5,3,3]})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(MDBMask,{overlay:\"white-strong\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(MDBIcon,{style:{color:\"#2bbbad\",cursor:\"pointer\"},size:\"1x\",icon:\"lock\"})})})]})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]})]})})});};","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/src/components/dashboard/Home.tsx"],"names":["React","useState","useEffect","Redirect","MDBCol","MDBContainer","MDBIcon","MDBRow","MDBView","MDBMask","Chart","CategoryChart","OrgChart","GradeChart","fetchData","Home","props","criticalCount","highCount","mediumCount","lowCount","dashboardKPI","setDashboardKPI","pentestSeries","setpentestSeries","domainSeries","setdomainSeries","servicesSeries","setservicesSeries","pentestSeriesCategory","setpentestSeriesCategory","domainsSeriesCategory","setdomainsSeriesCategory","servicesSeriesCategory","setservicesSeriesCategory","pentestSeriesCategoryCount","setpentestSeriesCategoryCount","domiansSeriesCategoryCount","setdomiansSeriesCategoryCount","servicesSeriesCategoryCount","setservicesSeriesCategoryCount","signature","setSignature","token","localStorage","getItem","console","log","then","res","message","indexOf","clear","JSON","stringify","Kpi","metrics","vapt","undefined","categories","count","sortable","Object","entries","key","value","push","sort","a","b","domains","sortableDomains","services","sortableServices","length","pathname","padding","iswatcher","fontWeight","fontSize","marginLeft","paddingTop","display","minHeight","cursor","border","SwitchView","backgroundColor","float","isvapt","opacity","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBView,\n    MDBMask,\n    MDBNotification\n} from \"mdbreact\";\nimport { useHistory } from \"react-router\";\nimport \"./style.css\"\nimport Charts from \"react-apexcharts\";\nimport { Chart } from \"../common/VulnChart\"\nimport { CategoryChart } from \"../common/VulnCatChart\"\nimport { OrgChart } from \"../common/OrgChart\"\nimport { GradeChart } from \"../common/GradeChart\"\nimport { fetchData } from '../../services/apiConfig'\nimport { TimeSeries } from '../common/TimeSeries'\nexport const Home = (props: any) => {\n    const [dashboardKPI, setDashboardKPI] = useState({\n        \"trial_days_remaining\": 15, \"metrics\": {\n            \"vapt\": { \"categories\": {}, \"count\": { criticalCount: 0, highCount: 0, mediumCount: 0, lowCount: 0 } },\n            \"domains\": { \"defaultAccount\": \"657657575\" }\n        }\n    });\n    const [pentestSeries, setpentestSeries] = useState([])\n    const [domainSeries, setdomainSeries] = useState([])\n    const [servicesSeries, setservicesSeries] = useState([])\n    const [pentestSeriesCategory, setpentestSeriesCategory] = useState([])\n    const [domainsSeriesCategory, setdomainsSeriesCategory] = useState([])\n    const [servicesSeriesCategory, setservicesSeriesCategory] = useState([])\n    const [pentestSeriesCategoryCount, setpentestSeriesCategoryCount] = useState([])\n    const [domiansSeriesCategoryCount, setdomiansSeriesCategoryCount] = useState([])\n    const [servicesSeriesCategoryCount, setservicesSeriesCategoryCount] = useState([])\n    const [signature, setSignature] = useState('');\n    const token = localStorage.getItem(\"token\");\n   \n    console.log(props)\n    useEffect(() => {\n        let pentestSeries: any;\n        let domainSeries: any;\n        let servicesSeries: any;\n\n        let pentestSeriesCategory: any;\n        let pentestSeriesCategoryCount: any;\n\n        let domainsSeriesCategory: any;\n        let domiansSeriesCategoryCount: any;\n\n        let servicesSeriesCategory: any;\n        let servicesSeriesCategoryCount: any;\n\n        fetchData('dashboard', 'GET').then((res: any) => {\n            setDashboardKPI(res);\n\n            if (res.message) {\n                if (res.message.indexOf(\"Error\") !== -1) {\n                    localStorage.clear();\n                    setSignature('0')\n                }\n            }\n            else if (JSON.stringify(res) !== JSON.stringify(props.Kpi)) {\n                setDashboardKPI(res);\n                if (res.metrics.vapt !== undefined) {\n                    if (res.metrics.vapt.categories !== undefined) {\n                        pentestSeries = [res.metrics.vapt.count.criticalCount, res.metrics.vapt.count.highCount, res.metrics.vapt.count.mediumCount, res.metrics.vapt.count.lowCount]\n                        setpentestSeries(pentestSeries)\n                        let sortable: any = [];\n                        for (const [key, value] of Object.entries(res.metrics.vapt.categories)) {\n                            sortable.push([key, value]);\n                        }\n                      \n                      \n                        sortable.sort((a: any, b: any) => {\n                            return b[1] - a[1];\n                        });\n                        \n                       \n                        pentestSeriesCategory = [(sortable[0] as any)[0], (sortable[1] as any)[0], (sortable[2] as any)[0]];\n\n                        setpentestSeriesCategory(pentestSeriesCategory);\n\n                        pentestSeriesCategoryCount = [(sortable[0] as any)[1], (sortable[1] as any)[1], (sortable[2] as any)[1]];\n\n                        setpentestSeriesCategoryCount(pentestSeriesCategoryCount);\n                    }\n                }\n                if(res.metrics.domains.count !== undefined) {\n                    domainSeries = [res.metrics.domains.count.criticalCount, res.metrics.domains.count.highCount, res.metrics.domains.count.mediumCount, res.metrics.domains.count.lowCount]\n                    setdomainSeries(domainSeries)\n                    let sortableDomains: any = [];\n                    for (const [key, value] of Object.entries(res.metrics.domains.categories)) {\n                        sortableDomains.push([key, value]);\n                    }\n                    sortableDomains.sort((a: any, b: any) => {\n                        return b[1] - a[1];\n                    });\n                    domainsSeriesCategory = [(sortableDomains[0] as any)[0], (sortableDomains[1] as any)[0], (sortableDomains[2] as any)[0]];\n                    setdomainsSeriesCategory(domainsSeriesCategory);\n                    domiansSeriesCategoryCount = [(sortableDomains[0] as any)[1], (sortableDomains[1] as any)[1], (sortableDomains[2] as any)[1]];\n                    setdomiansSeriesCategoryCount(domiansSeriesCategoryCount);\n\n                }\n                if(res.metrics.services.count !== undefined) {\n                    servicesSeries = [res.metrics.services.count.criticalCount, res.metrics.services.count.highCount, res.metrics.services.count.mediumCount, res.metrics.services.count.lowCount]\n                    setservicesSeries(servicesSeries)\n                    let sortableServices: any = [];\n                    for (const [key, value] of Object.entries(res.metrics.services.categories)) {\n                        sortableServices.push([key, value]);\n                    }\n                    sortableServices.sort((a: any, b: any) => {\n                        return b[1] - a[1];\n                    });\n                    servicesSeriesCategory = [(sortableServices[0] as any)[0], (sortableServices[1] as any)[0], (sortableServices[2] as any)[0]];\n                    setservicesSeriesCategory(servicesSeriesCategory);\n                    servicesSeriesCategoryCount = [(sortableServices[0] as any)[1], (sortableServices[1] as any)[1], (sortableServices[2] as any)[1]];\n                    setservicesSeriesCategoryCount(servicesSeriesCategoryCount);\n\n                }\n            } else {\n                if (props.Kpi.metrics.vapt !== undefined) {\n                    if (props.Kpi.metrics.vapt.categories !== undefined) {\n                        pentestSeries = [props.Kpi.metrics.vapt.count.criticalCount, props.Kpi.metrics.vapt.count.highCount, props.Kpi.metrics.vapt.count.mediumCount, props.Kpi.metrics.vapt.count.lowCount]\n                        setpentestSeries(pentestSeries)\n                        let sortable: any = [];\n                        for (const [key, value] of Object.entries(res.metrics.vapt.categories)) {\n                            sortable.push([key, value]);\n                        }\n                        sortable.sort((a: any, b: any) => {\n                            return b[1] - a[1];\n                        });\n                        pentestSeriesCategory = [(sortable[0] as any)[0], (sortable[1] as any)[0], (sortable[2] as any)[0]];\n\n                        setpentestSeriesCategory(pentestSeriesCategory);\n\n                        pentestSeriesCategoryCount = [(sortable[0] as any)[1], (sortable[1] as any)[1], (sortable[2] as any)[1]];\n\n                        setpentestSeriesCategoryCount(pentestSeriesCategoryCount);\n                    }\n                    if(res.metrics.domains.count !== undefined) {\n                        domainSeries = [res.metrics.domains.count.criticalCount, res.metrics.domains.count.highCount, res.metrics.domains.count.mediumCount, res.metrics.domains.count.lowCount]\n                        setdomainSeries(domainSeries)\n                        let sortableDomains: any = [];\n                        for (const [key, value] of Object.entries(res.metrics.domains.categories)) {\n                            sortableDomains.push([key, value]);\n                        }\n                        sortableDomains.sort((a: any, b: any) => {\n                            return b[1] - a[1];\n                        });\n                        domainsSeriesCategory = [(sortableDomains[0] as any)[0], (sortableDomains[1] as any)[0], (sortableDomains[2] as any)[0]];\n                        setdomainsSeriesCategory(domainsSeriesCategory);\n                        domiansSeriesCategoryCount = [(sortableDomains[0] as any)[1], (sortableDomains[1] as any)[1], (sortableDomains[2] as any)[1]];\n                        setdomiansSeriesCategoryCount(domiansSeriesCategoryCount);\n    \n    \n    \n                        if(res.metrics.services.count !== undefined) {\n                            servicesSeries = [res.metrics.services.count.criticalCount, res.metrics.services.count.highCount, res.metrics.services.count.mediumCount, res.metrics.services.count.lowCount]\n                            setservicesSeries(servicesSeries)\n                            let sortableServices: any = [];\n                            for (const [key, value] of Object.entries(res.metrics.services.categories)) {\n                                sortableServices.push([key, value]);\n                            }\n                            sortableServices.sort((a: any, b: any) => {\n                                return b[1] - a[1];\n                            });\n                            servicesSeriesCategory = [(sortableServices[0] as any)[0], (sortableServices[1] as any)[0], (sortableServices[2] as any)[0]];\n                            setservicesSeriesCategory(servicesSeriesCategory);\n                            servicesSeriesCategoryCount = [(sortableServices[0] as any)[1], (sortableServices[1] as any)[1], (sortableServices[2] as any)[1]];\n                            setservicesSeriesCategoryCount(servicesSeriesCategoryCount);\n        \n        \n                        }\n                    }\n                }\n            }\n            console.log(domainSeries)\n        })\n    }, []);\n\n    if (signature === '0' || token === null || token === undefined || token === 'undefined' || token.length < 0) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n    return (\n        <>\n            <MDBContainer fluid className=\"pt-5 pb-5\" style={{ padding: \"20px\" }}>\n                {props.iswatcher === true ?\n                    <MDBRow>\n                        <MDBCol sm=\"12\" md=\"12\" lg=\"6\">\n                            <>\n                                <div className=\"ptest\">\n                                    <h4 style={{ fontWeight: 800 }}>Organisation health<span className='text-light' style={{ fontSize: \"11px\", marginLeft: \"10px\", paddingTop: \"10px\" }}>Last synced on September 10 23:04</span></h4>\n                                    <br />\n                                    <p style={{ fontSize: \"12px\", paddingTop: \"8px\" }}>This pentest is an authorized simulated cyberattack on the primary service of the organisation,\n                                    performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\n                                </p>\n\n                                    <MDBRow >\n                                        <MDBCol sm=\"4\" md=\"4\" lg=\"4\">\n                                            <OrgChart />\n                                        </MDBCol>\n                                        <MDBCol sm=\"8\" md=\"8\" lg=\"8\">\n                                            <div className=\"gradechart\" style={{ display: \"inline-flex\", minHeight: \"130px\" }}>\n                                                <GradeChart title={\"Assets grade\"} value={100} />\n                                                <GradeChart title={\"Domains grade\"} value={70} offsetX={-50} />\n                                            </div>\n\n                                        </MDBCol>\n                                    </MDBRow>\n                                </div>\n                            </>\n                            <br /> <br /><br /><br />\n                            <>\n                                <div className=\"ptest\" style={{ cursor: \"pointer\", border: \"1px solid mistyrose\" }} onClick={() => {\n                                    props.SwitchView('domains')\n                                }}>\n                                    <h6 className=\"st\" style={{ fontWeight: 800, backgroundColor: \"rgb(255,228,225, 0.6)\" }}>Organization Domains\n                                        <MDBIcon icon=\"angle-double-right\" style={{ fontSize: \"15px\", marginLeft: \"10px\", float: \"right\" }} /></h6>\n                                    <p style={{ fontSize: \"12px\", padding: \"10px\" }}>Watcher checks on all your domains, monitors organisation assets at scale,\n                                    regularly checks for misconfigurations for potential hacks and exploits.\n                                         </p>\n                                    <MDBRow\n                                    >\n                                        <MDBCol sm=\"6\" md=\"6\" lg=\"6\">\n                                        <Chart   color={['#6F4242', '#856363', '#A96E6E', '#CFAFAF']} series={domainSeries} width={250} height={150} />\n                                            </MDBCol>\n                                        <MDBCol sm=\"6\" md=\"6\" lg=\"6\">  <CategoryChart\n                                          series={domiansSeriesCategoryCount} category={domainsSeriesCategory}\n                                            color={['#CFAFAF', '#A96E6E', '#6F4242']}\n                                          //  series={[8, 13, 12]}\n                                             /></MDBCol>\n                                    </MDBRow>\n                                    <br />\n                                </div>\n\n                            </>\n                            <br /> <br />\n                        </MDBCol>\n                        <MDBCol sm=\"12\" md=\"12\" lg=\"6\">\n                            {props.isvapt ?\n                                <div className=\"ptest\" style={{ cursor: \"pointer\", border: \"1px solid #ededef\" }} onClick={() => {\n                                    props.SwitchView('pentest')\n                                }}>\n                                    <h6 className=\"st\" style={{ fontWeight: 800, cursor: \"pointer\" }}>Vulnerability Assessment\n                                 <MDBIcon icon=\"angle-double-right\" style={{ fontSize: \"15px\", marginLeft: \"10px\", float: \"right\" }} />\n                                    </h6>\n                                    <p style={{ fontSize: \"12px\", padding: \"10px\" }}>This pentest is an authorized simulated cyberattack on the primary service of the organisation,\n                                    performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\n                                     </p>\n                                    <MDBRow>\n                                        <MDBCol sm=\"6\" md=\"6\" lg=\"6\">\n                                            <Chart series={pentestSeries} width={250} height={150} /> </MDBCol>\n                                              {(pentestSeriesCategoryCount.length > 0) ?\n                                            <MDBCol sm=\"6\" md=\"6\" lg=\"6\">\n                                                <CategoryChart series={pentestSeriesCategoryCount} category={pentestSeriesCategory} /></MDBCol> : <></>}\n                                    </MDBRow>\n                                </div>\n                                :\n                                <div className=\"ptest\" style={{ cursor: \"pointer\" }} onClick={() => {\n                                    props.SwitchView('pentest')\n                                }}>\n                                    <h6 style={{ fontWeight: 800 }}>Vulnerability Assessment</h6>\n                                    <p style={{ fontSize: \"12px\" }}>This pentest is an authorized simulated cyberattack on the primary service of the organisation,\n                                    performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\n                                 </p>\n\n                                    <MDBView style={{ border: \"1px solid #fff\" }}>\n                                        <MDBRow\n                                            style={{ opacity: 0.4 }}\n                                        >\n                                            <MDBCol sm=\"6\" md=\"6\" lg=\"6\"><Chart\n                                                color={['#808080', '#818589', '#71797E', '#899499']}\n                                                width={250} height={150} series={[6, 23, 14, 21]} /></MDBCol>\n                                            <MDBCol sm=\"6\" md=\"6\" lg=\"6\">  <CategoryChart\n                                                color={['#808080', '#818589', '#71797E', '#899499']}\n                                                series={[5, 3, 3]} /></MDBCol>\n                                        </MDBRow>\n                                        <br /><br />\n                                        <MDBMask overlay=\"white-strong\" >\n                                            <p><MDBIcon style={{ color: \"#2bbbad\", cursor: \"pointer\" }} size=\"1x\" icon=\"lock\" /></p>\n                                        </MDBMask>\n                                    </MDBView>\n                                </div>\n                            }\n                            <br /><br /><br />\n                            <>\n                                <div className=\"ptest\" style={{ cursor: \"pointer\", border: \"1px solid rgba(124, 192, 216, 0.3)\" }} onClick={() => {\n                                    props.SwitchView('services')\n                                }}>\n                                    <h6 className=\"st\" style={{ fontWeight: 800, backgroundColor: \"rgba(124, 192, 216, 0.2)\" }}>Cloud Services\n                                    <MDBIcon icon=\"angle-double-right\" style={{ fontSize: \"15px\", marginLeft: \"10px\", float: \"right\" }} /></h6>\n\n                                    <p style={{ fontSize: \"12px\", padding: \"10px\" }}>Watcher keeps eye on all your cloud services, monitors organisation assets at scale,\n                                    regularly checks for misconfigurations for potential hacks and exploits.\n                        </p>\n\n                                    <MDBRow\n                                    >\n                                        <MDBCol sm=\"6\" md=\"6\" lg=\"6\">\n                                        <Chart series={servicesSeries}\n                                         color={['#0f3c4c', '#1e7898', '#2596be', '#7cc0d8']} width={250} height={150} />\n                                            \n                                            {/* <Chart\n                                            color={['#0f3c4c', '#1e7898', '#2596be', '#7cc0d8']}\n                                            width={250} height={150} series={[6, 23, 14, 21]} /> */}\n                                            \n                                            </MDBCol>\n                                        <MDBCol sm=\"6\" md=\"6\" lg=\"6\">  <CategoryChart\n                                        series={servicesSeriesCategoryCount} category={servicesSeriesCategory}\n                                            color={['#0f3c4c', '#1e7898', '#2596be', '#7cc0d8']}\n                                            // color={['#CFAFAF', '#A96E6E', '#6F4242']} \n                                          //  series={[5, 3, 3]} \n                                            /></MDBCol>\n                                    </MDBRow>\n                                    <br />\n                                </div>\n                            </>\n                            <br /><br />\n                        </MDBCol>\n                    </MDBRow>\n                    :\n                    <MDBRow style={{ minHeight: \"80vh\" }}>\n                        <MDBCol sm=\"12\" md=\"12\" lg=\"6\">\n                            <>\n                                <h5 style={{ fontWeight: 800 }}>Organisation health<span className='text-light' style={{ fontSize: \"9px\", marginLeft: \"10px\", paddingTop: \"10px\" }}>Last synced on September 30 23:04</span></h5>\n                                <p style={{ fontSize: \"12px\", paddingTop: \"8px\" }}>This pentest is an authorized simulated cyberattack on the primary service of the organisation,\n                                    performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\n                                </p>\n                                <br />\n                                <MDBView >\n                                    <MDBRow style={{ opacity: 0.4 }}>\n                                        <MDBCol sm=\"12\" md=\"12\" lg=\"4\">\n                                            <OrgChart color={['#808080']} />\n                                        </MDBCol>\n                                        <MDBCol sm=\"12\" md=\"12\" lg=\"8\">\n                                            <div className=\"gradechart\" style={{ display: \"inline-flex\", minHeight: \"130px\" }}>\n                                                <GradeChart color={['#808080']} title={\"Assets grade\"} value={90} />\n                                                <GradeChart color={['#808080']} title={\"Domains grade\"} value={70} offsetX={-50} />\n                                            </div>\n\n                                        </MDBCol>\n                                    </MDBRow>\n                                    <MDBMask overlay=\"white-light\">\n                                        <p><MDBIcon style={{ color: \"#2bbbad\", cursor: \"pointer\" }} size=\"1x\" icon=\"lock\" >\n                                        </MDBIcon></p>\n                                    </MDBMask>\n                                </MDBView>\n                            </>\n                            <br />   <br /><br /><br />\n                            <>\n                                <MDBRow >\n                                    <MDBCol sm=\"12\" md=\"12\" lg=\"12\" style={{ border: \"1px solid #fff\" }}>\n\n                                        <>\n                                            <div className=\"ptest\" style={{ cursor: \"pointer\" }} onClick={() => {\n                                                props.SwitchView('pentest')\n                                            }}>\n                                                <h6 style={{ fontWeight: 800, }}>Organization Domains</h6>\n                                                <p style={{ fontSize: \"12px\" }}>Watcher checks on all your domains, monitors organisation assets at scale,\n                                                regularly checks for misconfigurations for potential hacks and exploits.\n                                                 </p>\n                                                <MDBView style={{ border: \"1px solid #fff\" }}>\n                                                    <MDBRow\n                                                        style={{ opacity: 0.4 }}\n                                                    >\n                                                        <MDBCol sm=\"12\" md=\"12\" lg=\"6\"><Chart\n                                                            color={['#808080', '#818589', '#71797E', '#899499']}\n                                                            width={250} height={150} series={[5, 13, 2, 12]} /></MDBCol>\n                                                        <MDBCol sm=\"12\" md=\"12\" lg=\"6\">  <CategoryChart\n                                                            color={['#808080', '#818589', '#71797E', '#899499']}\n                                                            series={[8, 13, 12]} /></MDBCol>\n                                                    </MDBRow>\n                                                    <br />\n                                                    <MDBMask overlay=\"white-strong\" >\n                                                        <p><MDBIcon style={{ color: \"#2bbbad\", cursor: \"pointer\" }} size=\"1x\" icon=\"lock\" /></p>\n                                                    </MDBMask>\n                                                </MDBView>\n                                            </div>\n                                        </>\n                                        {/* <div className=\"ptest\" style={{ cursor: \"pointer\" }} onClick={() => {\n                                            props.SwitchView('pentest')\n                                        }}>\n                                            <h6 style={{ fontWeight: 800 }}>Alerts<span className='text-light' style={{ fontSize: \"8px\", marginLeft: \"10px\", paddingTop: \"10px\" }}>6 available</span></h6>\n                                            <MDBView >\n                                                <div style={{ maxHeight: \"65vh\", overflowY: \"hidden\", overflowX: \"hidden\", opacity: 0.4 }}>\n                                                    <br />\n                                                    <MDBContainer>\n                                                        <MDBNotification\n                                                            show\n                                                            fade\n                                                            icon=\"bell\"\n                                                            iconClassName=\"grey-text\"\n                                                            className=\"notify\"\n                                                            title=\"SubDomain\"\n                                                            message=\"1 new issue [Cras mattis iudicium purus sit amet fermentum. Donec sed odio operae, eu vulputate felis rhoncus.]\"\n                                                            text=\"23 minutes ago\"\n                                                            style={{ maxWidth: \"100vw !important\" }}\n                                                        />\n                                                        <MDBNotification\n                                                            show\n                                                            fade\n                                                            icon=\"bell\"\n                                                            iconClassName=\"grey-text\"\n                                                            className=\"notify\"\n                                                            title=\"Sensitive endpoint\"\n                                                            message=\"2 new misconfigurations [Cras mattis iudicium purus sit amet fermentum. Donec sed odio operae, eu vulputate felis rhoncus.]\"\n                                                            text=\"42 minutes ago\"\n                                                        />\n                                                        <MDBNotification\n                                                            show\n                                                            fade\n                                                            icon=\"bell\"\n                                                            iconClassName=\"grey-text\"\n                                                            className=\"notify\"\n                                                            title=\"Public GIT repo\"\n                                                            message=\"Alert! GIT repo public [Cras mattis iudicium purus sit amet fermentum. Donec sed odio operae, eu vulputate felis rhoncus.]\"\n                                                            text=\"56 minutes ago\"\n                                                        />\n                                                        <MDBNotification\n                                                            show\n                                                            fade\n                                                            icon=\"bell\"\n                                                            iconClassName=\"grey-text\"\n                                                            className=\"notify\"\n                                                            title=\"Public GIT repo\"\n                                                            message=\"Alert! GIT repo public [Cras mattis iudicium purus sit amet fermentum. Donec sed odio operae, eu vulputate felis rhoncus.]\"\n                                                            text=\"56 minutes ago\"\n                                                        />\n                                                        <MDBNotification\n                                                            show\n                                                            fade\n                                                            icon=\"bell\"\n                                                            iconClassName=\"grey-text\"\n                                                            className=\"notify\"\n                                                            title=\"Public GIT repo\"\n                                                            message=\"Alert! GIT repo public [Cras mattis iudicium purus sit amet fermentum. Donec sed odio operae, eu vulputate felis rhoncus.]\"\n                                                            text=\"56 minutes ago\"\n                                                        />\n                                                        <MDBNotification\n                                                            show\n                                                            fade\n                                                            icon=\"bell\"\n                                                            iconClassName=\"grey-text\"\n                                                            className=\"notify\"\n                                                            title=\"Public GIT repo\"\n                                                            message=\"Alert! GIT repo public [Cras mattis iudicium purus sit amet fermentum. Donec sed odio operae, eu vulputate felis rhoncus.]\"\n                                                            text=\"56 minutes ago\"\n                                                        />\n                                                        <MDBNotification\n                                                            show\n                                                            fade\n                                                            icon=\"bell\"\n                                                            iconClassName=\"grey-text\"\n                                                            className=\"notify\"\n                                                            title=\"Public GIT repo\"\n                                                            message=\"Alert! GIT repo public [Cras mattis iudicium purus sit amet fermentum. Donec sed odio operae, eu vulputate felis rhoncus.]\"\n                                                            text=\"56 minutes ago\"\n                                                        />\n                                                    </MDBContainer>\n                                                </div>\n                                                <MDBMask overlay=\"white-light\">\n                                                    <p><MDBIcon style={{ color: \"#2bbbad\", cursor: \"pointer\" }} size=\"1x\" icon=\"lock\" >\n                                                    </MDBIcon></p>\n                                                </MDBMask>\n                                            </MDBView>\n                                        </div> */}\n                                    </MDBCol>\n                                </MDBRow>\n\n                            </>\n                        </MDBCol>\n                        <MDBCol sm=\"12\" md=\"12\" lg=\"6\">\n                            {props.isvapt ? <div className=\"ptest\" style={{ cursor: \"pointer\", border: \"1px solid #ededef\" }} onClick={() => {\n                                props.SwitchView('pentest')\n                            }}>\n                                <h6 className=\"st\" style={{ fontWeight: 800, cursor: \"pointer\" }}>Vulnerability Assessment\n                            <MDBIcon icon=\"angle-double-right\" style={{ fontSize: \"15px\", marginLeft: \"10px\", float: \"right\" }} />\n                                </h6>\n                                <p style={{ fontSize: \"12px\", padding: \"10px\" }}>This pentest is an authorized simulated cyberattack on the primary service of the organisation,\n                                performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\n                        </p>\n                                <MDBRow>\n                                    <MDBCol sm=\"12\" md=\"12\" lg=\"6\"><Chart series={pentestSeries} width={250} height={150} /> </MDBCol>\n                                    {(pentestSeriesCategoryCount.length > 0) ? <MDBCol sm=\"12\" md=\"12\" lg=\"6\">   <CategoryChart series={pentestSeriesCategoryCount} category={pentestSeriesCategory} /></MDBCol> : <></>}\n                                </MDBRow>\n                                <br />\n                            </div> :\n                                <div className=\"ptest\" style={{ cursor: \"pointer\" }} onClick={() => {\n                                    props.SwitchView('pentest')\n                                }}>\n                                    <h6 style={{ fontWeight: 800 }}>Vulnerability Assessment</h6>\n                                    <p style={{ fontSize: \"12px\" }}>This pentest is an authorized simulated cyberattack on the primary service of the organisation,\n                                    performed to evaluate the security of the system by identifying vulnerabilities enabling a full risk assessment to be completed.\n                                    </p>\n\n                                    <MDBView style={{ border: \"1px solid #fff\" }}>\n                                        <MDBRow\n                                            style={{ opacity: 0.4 }}\n                                        >\n                                            <MDBCol sm=\"12\" md=\"12\" lg=\"6\"><Chart\n                                                color={['#808080', '#818589', '#71797E', '#899499']}\n                                                width={250} height={150} series={[6, 23, 14, 21]} /></MDBCol>\n                                            <MDBCol sm=\"12\" md=\"12\" lg=\"6\">  <CategoryChart\n                                                color={['#808080', '#818589', '#71797E', '#899499']}\n                                                series={[5, 3, 3]} /></MDBCol>\n                                        </MDBRow>\n                                        <br />\n                                        <MDBMask overlay=\"white-strong\" >\n                                            <p><MDBIcon style={{ color: \"#2bbbad\", cursor: \"pointer\" }} size=\"1x\" icon=\"lock\" /></p>\n                                        </MDBMask>\n                                    </MDBView>\n                                </div>\n                            }\n                            <br /><br />\n                            <>\n                                <div className=\"ptest\" style={{ cursor: \"pointer\" }} onClick={() => {\n                                    props.SwitchView('pentest')\n                                }}>\n                                    <h6 style={{ fontWeight: 800 }}>Cloud Services</h6>\n                                    <p style={{ fontSize: \"12px\" }}>Watcher keeps eye on all your cloud services, monitors organisation assets at scale,\n                                    regularly checks for misconfigurations for potential hacks and exploits.\n                        </p>\n\n                                    <MDBView style={{ border: \"1px solid #fff\" }}>\n                                        <MDBRow\n                                            style={{ opacity: 0.4 }}\n                                        >\n                                            <MDBCol sm=\"12\" md=\"12\" lg=\"6\"><Chart\n                                                color={['#808080', '#818589', '#71797E', '#899499']}\n                                                width={250} height={150} series={[6, 23, 14, 21]} /></MDBCol>\n                                            <MDBCol sm=\"12\" md=\"12\" lg=\"6\">  <CategoryChart\n                                                color={['#808080', '#818589', '#71797E', '#899499']}\n                                                series={[5, 3, 3]} /></MDBCol>\n                                        </MDBRow>\n                                        <br />\n                                        <MDBMask overlay=\"white-strong\" >\n                                            <p><MDBIcon style={{ color: \"#2bbbad\", cursor: \"pointer\" }} size=\"1x\" icon=\"lock\" /></p>\n                                        </MDBMask>\n                                    </MDBView>\n                                </div>\n                            </>\n                            <br /><br />\n                        </MDBCol>\n                    </MDBRow>\n                }\n            </MDBContainer>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}