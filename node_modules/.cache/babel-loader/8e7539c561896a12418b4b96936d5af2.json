{"ast":null,"code":"import React,{useEffect}from\"react\";import{Redirect}from'react-router';import{MDBCol,MDBIcon}from\"mdbreact\";import\"./style.css\";import{fetchData}from'../../services/apiConfig';import watermark from\"../../assets/images/watermark.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Scan=function Scan(props){useEffect(function(){console.log(props);console.log(props.Account);if(props.Account.length>10){fetchData('asset','GET','?accountName='+props.Account).then(function(res){console.log(props);console.log(\"account changed\");if(res.message===\"Scanning is in progress..\"){props.SwitchView('scan');}else{props.SwitchView('assets');}});}},[props.Account]);var SubDomainSwitch=function SubDomainSwitch(e){console.log(e);props.SwitchView('subdomains',e);};var token=localStorage.getItem(\"token\");console.log(props);if(token===null||token===undefined||token.length<0){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/login'}});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MDBCol,{style:{marginTop:\"35vh\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-center\",children:[/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"20px\",fontWeight:\"bold\"},children:\"Scanning in progress \"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(MDBIcon,{icon:\"sync\",spin:true,size:\"2x\",fixed:true,style:{color:\"#2bbbad\"}}),/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Loading...\"})]})}),/*#__PURE__*/_jsx(\"img\",{src:watermark,alt:\"Amazon Glacier\",style:{width:\"80vw\",opacity:0.1,marginTop:\"-40vh\",filter:\"grayscale(1)\"}})]})});};","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/dashboard/Scan.tsx"],"names":["React","useEffect","Redirect","MDBCol","MDBIcon","fetchData","watermark","Scan","props","console","log","Account","length","then","res","message","SwitchView","SubDomainSwitch","e","token","localStorage","getItem","undefined","pathname","marginTop","fontSize","fontWeight","color","width","opacity","filter"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAkCC,SAAlC,KAAmD,OAAnD,CACA,OAASC,QAAT,KAAyB,cAAzB,CAEA,OAOIC,MAPJ,CAUIC,OAVJ,KAuBO,UAvBP,CA0BA,MAAO,aAAP,CACA,OAASC,SAAT,KAA0B,0BAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,mCAAtB,C,6IACA,MAAO,IAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAgB,CAChCP,SAAS,CAAC,UAAM,CACZQ,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,EACA,GAAGH,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAuB,EAA1B,CAA8B,CAC9BP,SAAS,CAAC,OAAD,CAAU,KAAV,CAAiB,gBAAkBG,KAAK,CAACG,OAAzC,CAAT,CAA2DE,IAA3D,CAAgE,SAACC,GAAD,CAAc,CAC1EL,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACA,GAAGI,GAAG,CAACC,OAAJ,GAAgB,2BAAnB,CAA+C,CAC3CP,KAAK,CAACQ,UAAN,CAAiB,MAAjB,EACH,CAFD,IAEO,CACHR,KAAK,CAACQ,UAAN,CAAiB,QAAjB,EACH,CACJ,CARD,EASH,CACA,CAdQ,CAcN,CAACR,KAAK,CAACG,OAAP,CAdM,CAAT,CAeA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAY,CAChCT,OAAO,CAACC,GAAR,CAAYQ,CAAZ,EACAV,KAAK,CAACQ,UAAN,CAAiB,YAAjB,CAA+BE,CAA/B,EACH,CAHD,CAKA,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACAZ,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,GAAIW,KAAK,GAAK,IAAV,EAAkBA,KAAK,GAAKG,SAA5B,EAAyCH,KAAK,CAACP,MAAN,CAAe,CAA5D,CAA+D,CAC3D,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,CACjBW,QAAQ,CAAE,QADO,CAAd,EAAP,CAGH,CACD,mBACI,sCACI,oCACI,KAAC,MAAD,EAAQ,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAb,CAAf,uBACI,aAAK,SAAS,CAAC,+BAAf,wBACI,UAAG,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAZ,CAAoBC,UAAU,CAAE,MAAhC,CAAV,mCADJ,cAEI,aAFJ,cAGI,KAAC,OAAD,EAAS,IAAI,CAAC,MAAd,CAAqB,IAAI,KAAzB,CAA0B,IAAI,CAAC,IAA/B,CAAoC,KAAK,KAAzC,CAA0C,KAAK,CAAE,CAAEC,KAAK,CAAE,SAAT,CAAjD,EAHJ,cAII,aAAM,SAAS,CAAC,SAAhB,wBAJJ,GADJ,EADJ,cASI,YAAK,GAAG,CAAErB,SAAV,CAAqB,GAAG,CAAC,gBAAzB,CAA0C,KAAK,CAAE,CAAEsB,KAAK,CAAE,MAAT,CAAiBC,OAAO,CAAE,GAA1B,CAA+BL,SAAS,CAAE,OAA1C,CAAmDM,MAAM,CAAE,cAA3D,CAAjD,EATJ,GADJ,EADJ,CAeH,CA3CM","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBProgress,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBreadcrumbItem,\n    MDBBreadcrumb\n} from \"mdbreact\";\nimport { useHistory } from \"react-router\";\nimport { Chart } from \"react-google-charts\";\nimport \"./style.css\";\nimport { fetchData } from '../../services/apiConfig'\nimport watermark from \"../../assets/images/watermark.png\"\nexport const Scan = (props: any) => {\n    useEffect(() => {\n        console.log(props)\n        console.log(props.Account)\n        if(props.Account.length > 10) {\n        fetchData('asset', 'GET', '?accountName=' + props.Account).then((res: any) => {\n            console.log(props)\n            console.log(\"account changed\")\n            if(res.message === \"Scanning is in progress..\"){\n                props.SwitchView('scan')\n            } else {\n                props.SwitchView('assets')\n            }\n        })\n    }\n    }, [props.Account]);\n    const SubDomainSwitch = (e: any) => {\n        console.log(e);\n        props.SwitchView('subdomains', e)\n    }\n\n    const token = localStorage.getItem(\"token\");\n    console.log(props)\n    if (token === null || token === undefined || token.length < 0) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n    return (\n        <>\n            <div>\n                <MDBCol style={{ marginTop: \"35vh\" }}>\n                    <div className=\"d-flex justify-content-center\">\n                        <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>Scanning in progress </p>\n                        <br />\n                        <MDBIcon icon=\"sync\" spin size=\"2x\" fixed style={{ color: \"#2bbbad\" }} />\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </MDBCol>\n                <img src={watermark} alt=\"Amazon Glacier\" style={{ width: \"80vw\", opacity: 0.1, marginTop: \"-40vh\", filter: \"grayscale(1)\"}} />\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}