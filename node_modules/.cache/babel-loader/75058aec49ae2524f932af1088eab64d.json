{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/common/TimeSeries.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Charts from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TimeSeries = props => {\n  _s();\n\n  const [chartoptions, setChartoptions] = useState({\n    series: [{\n      name: \"Session Duration\",\n      data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]\n    }, {\n      name: \"Page Views\",\n      data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35]\n    }, {\n      name: 'Total Visits',\n      data: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47]\n    }],\n    options: {\n      chart: {\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: [5, 7, 5],\n        curve: 'straight',\n        dashArray: [0, 8, 5]\n      },\n      title: {\n        text: 'Page Statistics',\n        align: 'left'\n      },\n      markers: {\n        size: 0,\n        hover: {\n          sizeOffset: 6\n        }\n      },\n      xaxis: {\n        categories: ['01 Jan', '02 Jan', '03 Jan', '04 Jan', '05 Jan', '06 Jan', '07 Jan', '08 Jan', '09 Jan', '10 Jan', '11 Jan', '12 Jan']\n      },\n      grid: {\n        borderColor: '#f1f1f1'\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Charts, {\n      options: chartoptions.options,\n      series: chartoptions.series,\n      type: \"line\",\n      width: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TimeSeries, \"IJe13+1gONqUhm4VvqN3K6i5LpE=\");\n\n_c = TimeSeries;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeSeries\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/common/TimeSeries.tsx"],"names":["React","useState","Charts","TimeSeries","props","chartoptions","setChartoptions","series","name","data","options","chart","height","type","zoom","enabled","dataLabels","stroke","width","curve","dashArray","title","text","align","markers","size","hover","sizeOffset","xaxis","categories","grid","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,QAAmD,OAAnD;AAKA,OAAOC,MAAP,MAAmB,kBAAnB;;;AACA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAgB;AAAA;;AACtC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC;AAC7CM,IAAAA,MAAM,EAAE,CAAC;AACPC,MAAAA,IAAI,EAAE,kBADC;AAEPC,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,EAAvC,EAA2C,EAA3C;AAFC,KAAD,EAIR;AACED,MAAAA,IAAI,EAAE,YADR;AAEEC,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C;AAFR,KAJQ,EAQR;AACED,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C;AAFR,KARQ,CADqC;AAc/CC,IAAAA,OAAO,EAAG;AACRC,MAAAA,KAAK,EAAE;AACPC,QAAAA,MAAM,EAAE,GADD;AAEPC,QAAAA,IAAI,EAAE,MAFC;AAGPC,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AAHC,OADC;AAQVC,MAAAA,UAAU,EAAE;AACVD,QAAAA,OAAO,EAAE;AADC,OARF;AAWVE,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADD;AAENC,QAAAA,KAAK,EAAE,UAFD;AAGNC,QAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAHL,OAXE;AAgBVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,iBADD;AAELC,QAAAA,KAAK,EAAE;AAFF,OAhBG;AAqBVC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE;AADP;AAFA,OArBC;AA2BVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,QAA7D,EAAuE,QAAvE,EAAiF,QAAjF,EACV,QADU,EACA,QADA,EACU,QADV;AADP,OA3BG;AAiCVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,WAAW,EAAE;AADT;AAjCI;AAdqC,GAAD,CAAhD;AAsDA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAE1B,YAAY,CAACK,OAD1B;AAEI,MAAA,MAAM,EAAEL,YAAY,CAACE,MAFzB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH,CAjEM;;GAAMJ,U;;KAAAA,U","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n} from \"mdbreact\";\nimport Charts from \"react-apexcharts\";\nexport const TimeSeries = (props: any) => {\n    const [chartoptions, setChartoptions] = useState({\n        series: [{\n          name: \"Session Duration\",\n          data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]\n        },\n        {\n          name: \"Page Views\",\n          data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35]\n        },\n        {\n          name: 'Total Visits',\n          data: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47]\n        }\n      ],\n      options : {\n        chart: {\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false\n        },\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: [5, 7, 5],\n        curve: 'straight',\n        dashArray: [0, 8, 5]\n      },\n      title: {\n        text: 'Page Statistics',\n        align: 'left'\n      },\n      \n      markers: {\n        size: 0,\n        hover: {\n          sizeOffset: 6\n        }\n      },\n      xaxis: {\n        categories: ['01 Jan', '02 Jan', '03 Jan', '04 Jan', '05 Jan', '06 Jan', '07 Jan', '08 Jan', '09 Jan',\n          '10 Jan', '11 Jan', '12 Jan'\n        ],\n      },\n      \n      grid: {\n        borderColor: '#f1f1f1',\n      }\n    }\n      \n});\n   \n    return (\n        <>\n            <Charts\n                options={chartoptions.options}\n                series={chartoptions.series}\n                type=\"line\"\n                width=\"300\"\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}