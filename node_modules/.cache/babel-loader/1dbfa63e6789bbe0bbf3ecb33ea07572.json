{"ast":null,"code":"import _slicedToArray from\"/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Redirect}from'react-router';import{MDBContainer,MDBRow}from\"mdbreact\";import\"./style.css\";import{fetchData}from'../../services/apiConfig';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var AccountsSelector=function AccountsSelector(props){console.log(props);var _useState=useState([props.Account]),_useState2=_slicedToArray(_useState,2),AccountList=_useState2[0],setAccountList=_useState2[1];var accountList=new Array();useEffect(function(){console.log(\"fetch\");fetchData('accounts','GET').then(function(res){for(var key in res){accountList.push(res[key]);}setAccountList(accountList);});},[props]);var AccountT=function AccountT(e){var newAccount=e.target.value;props.AccountToggle(newAccount);};var token=localStorage.getItem(\"token\");console.log(\"accountSelector\");if(token===null||token===undefined||token.length<0){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/login'}});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(MDBContainer,{fluid:true,style:{paddingTop:\"1vw\",paddingLeft:\"2vw\"},children:/*#__PURE__*/_jsx(MDBRow,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"accountSelect\",children:\"Account:\"}),/*#__PURE__*/_jsx(\"select\",{className:\"custom-select\",onChange:function onChange(e){return AccountT(e);},value:props.Account,children:AccountList.map(function(account){return/*#__PURE__*/_jsx(\"option\",{value:account,children:account});})})]})})})});};","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/src/components/dashboard/AccountsSelector.tsx"],"names":["React","useState","useEffect","Redirect","MDBContainer","MDBRow","fetchData","AccountsSelector","props","console","log","Account","AccountList","setAccountList","accountList","Array","then","res","key","push","AccountT","e","newAccount","target","value","AccountToggle","token","localStorage","getItem","undefined","length","pathname","paddingTop","paddingLeft","map","account"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,cAAzB,CAEA,OAQIC,YARJ,CAYIC,MAZJ,KAuBO,UAvBP,CA0BA,MAAO,aAAP,CAEA,OAASC,SAAT,KAA0B,0BAA1B,C,6IACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAgB,CAC5CC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAD4C,cAENP,QAAQ,CAAC,CAACO,KAAK,CAACG,OAAP,CAAD,CAFF,wCAErCC,WAFqC,eAExBC,cAFwB,eAG5C,GAAMC,CAAAA,WAAgB,CAAG,GAAIC,CAAAA,KAAJ,EAAzB,CACAb,SAAS,CAAC,UAAM,CACZO,OAAO,CAACC,GAAR,CAAY,OAAZ,EACAJ,SAAS,CAAC,UAAD,CAAa,KAAb,CAAT,CAA6BU,IAA7B,CAAkC,SAACC,GAAD,CAAc,CAC5C,IAAI,GAAIC,CAAAA,GAAR,GAAeD,CAAAA,GAAf,CAAmB,CACfH,WAAW,CAACK,IAAZ,CAAiBF,GAAG,CAACC,GAAD,CAApB,EACH,CACDL,cAAc,CAACC,WAAD,CAAd,CACH,CALD,EAMH,CARQ,CAQN,CAACN,KAAD,CARM,CAAT,CAUA,GAAMY,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAY,CACzB,GAAMC,CAAAA,UAAU,CAAGD,CAAC,CAACE,MAAF,CAASC,KAA5B,CACAhB,KAAK,CAACiB,aAAN,CAAoBH,UAApB,EACH,CAHD,CAIA,GAAMI,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACAnB,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACA,GAAIgB,KAAK,GAAK,IAAV,EAAkBA,KAAK,GAAKG,SAA5B,EAAyCH,KAAK,CAACI,MAAN,CAAe,CAA5D,CAA+D,CAC3D,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,CACjBC,QAAQ,CAAE,QADO,CAAd,EAAP,CAGH,CACD,mBACI,sCACI,KAAC,YAAD,EAAc,KAAK,KAAnB,CAAoB,KAAK,CAAE,CAAEC,UAAU,CAAE,KAAd,CAAqBC,WAAW,CAAE,KAAlC,CAA3B,uBACI,KAAC,MAAD,wBACI,oCACA,cAAO,SAAS,CAAC,eAAjB,sBADA,cAEI,eAAQ,SAAS,CAAC,eAAlB,CACC,QAAQ,CAAE,kBAACZ,CAAD,QAAYD,CAAAA,QAAQ,CAACC,CAAD,CAApB,EADX,CACoC,KAAK,CAAEb,KAAK,CAACG,OADjD,UAEIC,WAAW,CAACsB,GAAZ,CAAgB,SAACC,OAAD,CAAkB,CAC9B,mBAAO,eAAQ,KAAK,CAAEA,OAAf,UAAyBA,OAAzB,EAAP,CACJ,CAFA,CAFJ,EAFJ,GADJ,EADJ,EADJ,EADJ,CAiBH,CA1CM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBProgress,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBreadcrumb,\n    MDBBreadcrumbItem\n} from \"mdbreact\";\nimport { useHistory } from \"react-router\";\nimport { Chart } from \"react-google-charts\";\nimport \"./style.css\";\nimport domain from '../../assets/images/domain.png'\nimport { fetchData } from '../../services/apiConfig'\nexport const AccountsSelector = (props: any) => {\n    console.log(props)\n    const [AccountList, setAccountList] = useState([props.Account]);\n    const accountList: any = new Array();\n    useEffect(() => {\n        console.log(\"fetch\")\n        fetchData('accounts', 'GET').then((res: any) => {\n            for(let key in res){\n                accountList.push(res[key]);\n            }\n            setAccountList(accountList)\n        })\n    }, [props]);\n    \n    const AccountT = (e: any) => {\n        const newAccount = e.target.value;\n        props.AccountToggle(newAccount);\n    }\n    const token = localStorage.getItem(\"token\");\n    console.log(\"accountSelector\")\n    if (token === null || token === undefined || token.length < 0) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n    return (\n        <>\n            <MDBContainer fluid style={{ paddingTop: \"1vw\", paddingLeft: \"2vw\"  }}>\n                <MDBRow>\n                    <div>\n                    <label className=\"accountSelect\">Account:</label>\n                        <select className=\"custom-select\" \n                         onChange={(e: any) => AccountT(e)} value={props.Account}>\n                           {AccountList.map((account: any) => {\n                                return <option value={account}>{account}</option>\n                           })}\n                        </select>\n                    </div>\n                </MDBRow>\n            </MDBContainer>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}