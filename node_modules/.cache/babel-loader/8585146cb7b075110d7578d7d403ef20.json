{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/common/VulnCatChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Charts from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CategoryChart = props => {\n  _s();\n\n  const [chartoptions, setChartoptions] = useState({\n    series: [14, 23, 21],\n    options: {\n      stroke: {\n        colors: ['#fff']\n      },\n      colors: ['#f42415', '#ff9800', '#2bbbad'],\n      labels: [\"Critical\", \"High\", \"Low\"],\n      dataLabels: {\n        enabled: false\n      },\n      plotOptions: {\n        polarArea: {\n          rings: {\n            strokeWidth: 0\n          },\n          spokes: {\n            strokeWidth: 0\n          }\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Charts, {\n      options: chartoptions.options,\n      series: chartoptions.series,\n      type: \"polarArea\",\n      width: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(CategoryChart, \"N0LAQcnmTgwIC/xTvFb6HVMnF4k=\");\n\n_c = CategoryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryChart\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/common/VulnCatChart.tsx"],"names":["React","useState","Charts","CategoryChart","props","chartoptions","setChartoptions","series","options","stroke","colors","labels","dataLabels","enabled","plotOptions","polarArea","rings","strokeWidth","spokes","fill","opacity","responsive","breakpoint","chart","width","legend","position"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,QAAmD,OAAnD;AAKA,OAAOC,MAAP,MAAmB,kBAAnB;;;AACA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAgB;AAAA;;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC;AAC7CM,IAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADqC;AAEzCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE,CAAC,MAAD;AADF,OADD;AAIPA,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAJD;AAKPC,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,MAAb,EAAqB,KAArB,CALD;AAOPC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OAPL;AAUTC,MAAAA,WAAW,EAAE;AACTC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE;AADR,WADE;AAITC,UAAAA,MAAM,EAAE;AACND,YAAAA,WAAW,EAAE;AADP;AAJC;AADF,OAVJ;AAoBPE,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL,OApBC;AAuBPC,MAAAA,UAAU,EAAE,CAAC;AACXC,QAAAA,UAAU,EAAE,GADD;AAEXd,QAAAA,OAAO,EAAE;AACPe,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE;AADF,WADA;AAIPC,UAAAA,MAAM,EAAE;AACNC,YAAAA,QAAQ,EAAE;AADJ;AAJD;AAFE,OAAD;AAvBL;AAFgC,GAAD,CAAhD;AAwCA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAErB,YAAY,CAACG,OAD1B;AAEI,MAAA,MAAM,EAAEH,YAAY,CAACE,MAFzB;AAGI,MAAA,IAAI,EAAC,WAHT;AAII,MAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH,CAnDM;;GAAMJ,a;;KAAAA,a","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n} from \"mdbreact\";\nimport Charts from \"react-apexcharts\";\nexport const CategoryChart = (props: any) => {\n    const [chartoptions, setChartoptions] = useState({\n        series: [14, 23, 21],\n            options: {\n              stroke: {\n                colors: ['#fff']\n              },\n              colors: ['#f42415', '#ff9800', '#2bbbad'],\n              labels: [\"Critical\", \"High\", \"Low\"],\n              \n              dataLabels: {\n                enabled: false,\n            },\n            plotOptions: {\n                polarArea: {\n                  rings: {\n                    strokeWidth: 0\n                  },\n                  spokes: {\n                    strokeWidth: 0\n                  },\n                }\n              },\n              fill: {\n                opacity: 1\n              },\n              responsive: [{\n                breakpoint: 480,\n                options: {\n                  chart: {\n                    width: 200\n                  },\n                  legend: {\n                    position: 'bottom'\n                  }\n                }\n              }]\n            },\n          \n          \n    });\n    return (\n        <>\n            <Charts\n                options={chartoptions.options}\n                series={chartoptions.series}\n                type=\"polarArea\"\n                width=\"300\"\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}