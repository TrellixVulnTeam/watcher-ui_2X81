{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/common/VulnChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Charts from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Chart = props => {\n  _s();\n\n  console.log(props);\n  const [chartoptions, setChartoptions] = useState({\n    options: {\n      chart: {\n        id: \"bar\",\n        offsetX: 0,\n        toolbar: {\n          show: false\n        }\n      },\n      xaxis: {\n        categories: [\"Critical\", \"High\", \"Low\"],\n        offsetY: 5,\n        labels: {\n          show: false,\n          style: {\n            fontSize: '3px',\n            fontFamily: 'Inter'\n          }\n        },\n        axisBorder: {\n          show: true,\n          color: '#607d8b',\n          height: 4,\n          width: '100%'\n        },\n        axisTicks: {\n          show: false\n        },\n        tooltip: {\n          style: {\n            fontSize: '3px',\n            fontFamily: 'Inter'\n          }\n        }\n      },\n      fill: {\n        opacity: 0.95\n      },\n      colors: props.color ? props.color : ['#f44336', '#ff9800', '#2bbbad'],\n      dataLabels: {\n        enabled: false,\n        style: {\n          fontSize: '3px',\n          fontFamily: 'Inter'\n        }\n      },\n      legend: {\n        show: props.width > 200 ? true : false,\n        position: \"right\",\n        offsetY: 40,\n        fontSize: \"8px\"\n      },\n      plotOptions: {\n        bar: {\n          distributed: true\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      },\n      grid: {\n        show: false\n      },\n      tooltip: {\n        style: {\n          fontSize: '3px',\n          fontFamily: 'Inter'\n        }\n      }\n    },\n    series: [{\n      name: \"Vulnearbility\",\n      data: props.series ? props.series : [30, 40, 45]\n    }]\n  });\n  useEffect(() => {\n    setChartoptions({\n      options: {\n        chart: {\n          offsetX: props.width > 200 ? 0 : -20,\n          id: \"bar\",\n          toolbar: {\n            show: false\n          }\n        },\n        xaxis: {\n          categories: [\"Critical\", \"High\", \"Medium\", \"Low\"],\n          offsetY: 5,\n          labels: {\n            show: props.width > 200 ? false : true,\n            style: {\n              fontSize: '10px',\n              fontFamily: 'Inter'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#607d8b',\n            height: 4,\n            width: '100%'\n          },\n          axisTicks: {\n            show: false\n          },\n          tooltip: {\n            style: {\n              fontSize: '8px',\n              fontFamily: 'Inter'\n            }\n          }\n        },\n        fill: {\n          opacity: 0.95\n        },\n        colors: props.color ? props.color : ['#f44336', '#ff9800', '#0784eb', '#2bbbad'],\n        dataLabels: {\n          enabled: props.width < 200 ? true : false,\n          style: {\n            fontSize: '10px',\n            fontFamily: 'Inter'\n          }\n        },\n        legend: {\n          show: props.width > 200 ? true : false,\n          position: props.width > 200 ? \"right\" : \"right\",\n          offsetY: 0,\n          fontSize: \"8px\"\n        },\n        plotOptions: {\n          bar: {\n            distributed: true\n          }\n        },\n        yaxis: {\n          labels: {\n            show: false\n          }\n        },\n        grid: {\n          show: false\n        },\n        tooltip: {\n          style: {\n            fontSize: '8px',\n            fontFamily: 'Inter'\n          }\n        }\n      },\n      series: [{\n        name: \"Vulnearbility\",\n        data: props.series ? props.series : [30, 40, 45]\n      }]\n    });\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Charts, {\n      options: chartoptions.options,\n      series: chartoptions.series,\n      type: \"bar\",\n      width: props.width,\n      height: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chart, \"9pn03E0Rhyx5eggswJevOUnFIcY=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/common/VulnChart.tsx"],"names":["React","useState","useEffect","Charts","Chart","props","console","log","chartoptions","setChartoptions","options","chart","id","offsetX","toolbar","show","xaxis","categories","offsetY","labels","style","fontSize","fontFamily","axisBorder","color","height","width","axisTicks","tooltip","fill","opacity","colors","dataLabels","enabled","legend","position","plotOptions","bar","distributed","yaxis","grid","series","name","data"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n} from \"mdbreact\";\nimport Charts from \"react-apexcharts\";\nexport const Chart = (props: any) => {\n    console.log(props)\n    const [chartoptions, setChartoptions] = useState({\n        options: {\n            chart: {\n                id: \"bar\",\n                offsetX: 0,\n                toolbar: {\n                    show: false\n                }\n            },\n            xaxis: {\n                categories: [\"Critical\", \"High\", \"Low\"],\n                offsetY: 5,\n                labels: {\n                    show: false,\n                    style: {\n                        fontSize: '3px',\n                        fontFamily: 'Inter'\n                      }\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#607d8b',\n                    height: 4,\n                    width: '100%',\n                },\n                axisTicks: {\n                    show: false\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '3px',\n                        fontFamily: 'Inter'\n                      }\n                }\n            },\n            fill: {\n                opacity: 0.95\n            },\n            colors: props.color? props.color : ['#f44336', '#ff9800', '#2bbbad'],\n            dataLabels: {\n                enabled: false,\n                style: {\n                    fontSize: '3px',\n                    fontFamily: 'Inter'\n                  }\n            },\n\n            legend: {\n                show: props.width > 200 ? true : false,\n                position: \"right\",\n                offsetY: 40,\n                fontSize: \"8px\"\n            },\n            plotOptions: {\n                bar: {\n                    distributed: true,\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                },\n            },\n            grid: {\n                show: false,\n            },\n            tooltip: {\n                style: {\n                    fontSize: '3px',\n                    fontFamily: 'Inter'\n                  }\n            }\n        },\n        series:\n            [{\n                name: \"Vulnearbility\",\n                data: props.series? props.series :[30, 40, 45],\n            }]\n\n    });\n    useEffect(() => {\n        setChartoptions({\n            options: {\n                chart: {\n                    offsetX: props.width > 200 ? 0: -20,\n                    id: \"bar\",\n                    toolbar: {\n                        show: false\n                    }\n                },\n                xaxis: {\n                    categories: [\"Critical\", \"High\", \"Medium\", \"Low\"],\n                    offsetY: 5,\n                    labels: {\n                        show: props.width > 200 ? false : true,\n                        style: {\n                            fontSize: '10px',\n                            fontFamily: 'Inter'\n                          }\n                    },\n                    axisBorder: {\n                        show: true,\n                        color: '#607d8b',\n                        height: 4,\n                        width: '100%',\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    tooltip: {\n                        style: {\n                            fontSize: '8px',\n                            fontFamily: 'Inter'\n                          }\n                    }\n                },\n                fill: {\n                    opacity: 0.95\n                },\n                colors: props.color? props.color : ['#f44336', '#ff9800', '#0784eb', '#2bbbad'],\n                dataLabels: {\n                    enabled: props.width < 200 ? true : false,\n                    style: {\n                        fontSize: '10px',\n                        fontFamily: 'Inter'\n                      }\n                },\n                legend: {\n                   show: props.width > 200 ? true : false,\n                    position:  props.width > 200 ? \"right\" : \"right\" ,\n                    offsetY:  0,\n                    fontSize: \"8px\"\n                },\n                plotOptions: {\n                    bar: {\n                        distributed: true,\n                    }\n                },\n                yaxis: {\n                    labels: {\n                        show: false\n                    },\n                },\n                grid: {\n                    show: false,\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '8px',\n                        fontFamily: 'Inter'\n                      }\n                }\n            },\n            series:\n                [{\n                    name: \"Vulnearbility\",\n                    data: props.series? props.series :[30, 40, 45],\n                }]\n    \n        })\n    }, [props]);\n    return (\n        <>\n            <Charts\n                options={chartoptions.options}\n                series={chartoptions.series}\n                type=\"bar\"\n                width={props.width}\n                height={150}\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}