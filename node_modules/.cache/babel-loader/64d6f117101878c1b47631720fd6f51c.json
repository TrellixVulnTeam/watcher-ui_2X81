{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/common/VulnChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Charts from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Chart = props => {\n  _s();\n\n  console.log(props);\n  useEffect(() => {\n    console.log(\"re-render\");\n    setChartoptions(chartoptions);\n  }, [props]);\n  const [chartoptions, setChartoptions] = useState({\n    options: {\n      chart: {\n        id: \"bar\",\n        toolbar: {\n          show: false\n        }\n      },\n      xaxis: {\n        categories: [\"Critical\", \"High\", \"Low\"],\n        offsetY: 5,\n        labels: {\n          show: false\n        },\n        axisBorder: {\n          show: true,\n          color: '#607d8b',\n          height: 4,\n          width: '100%'\n        },\n        axisTicks: {\n          show: false\n        }\n      },\n      fill: {\n        opacity: 0.95\n      },\n      colors: props.color ? props.color : ['#f44336', '#ff9800', '#2bbbad'],\n      dataLabels: {\n        enabled: false\n      },\n      legend: {\n        position: \"right\",\n        offsetY: 40\n      },\n      plotOptions: {\n        bar: {\n          distributed: true\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      },\n      grid: {\n        show: false\n      },\n      tooltip: {\n        style: {\n          fontSize: '10px',\n          fontFamily: 'Inter'\n        }\n      }\n    },\n    series: [{\n      name: \"Vulnearbility\",\n      data: props.series ? props.series : [30, 40, 45]\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Charts, {\n      options: chartoptions.options,\n      series: chartoptions.series,\n      type: \"bar\",\n      width: \"250\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chart, \"FvX/CdKTIhY76w3/l9FTeK+rT3k=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/common/VulnChart.tsx"],"names":["React","useState","useEffect","Charts","Chart","props","console","log","setChartoptions","chartoptions","options","chart","id","toolbar","show","xaxis","categories","offsetY","labels","axisBorder","color","height","width","axisTicks","fill","opacity","colors","dataLabels","enabled","legend","position","plotOptions","bar","distributed","yaxis","grid","tooltip","style","fontSize","fontFamily","series","name","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAKA,OAAOC,MAAP,MAAmB,kBAAnB;;;AACA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAgB;AAAA;;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAC,IAAAA,eAAe,CAACC,YAAD,CAAf;AACH,GAHQ,EAGN,CAACJ,KAAD,CAHM,CAAT;AAIA,QAAM,CAACI,YAAD,EAAeD,eAAf,IAAkCP,QAAQ,CAAC;AAC7CS,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,EAAE,EAAE,KADD;AAEHC,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD;AAFN,OADF;AAOLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,MAAb,EAAqB,KAArB,CADT;AAEHC,QAAAA,OAAO,EAAE,CAFN;AAGHC,QAAAA,MAAM,EAAE;AACJJ,UAAAA,IAAI,EAAE;AADF,SAHL;AAMHK,QAAAA,UAAU,EAAE;AACRL,UAAAA,IAAI,EAAE,IADE;AAERM,UAAAA,KAAK,EAAE,SAFC;AAGRC,UAAAA,MAAM,EAAE,CAHA;AAIRC,UAAAA,KAAK,EAAE;AAJC,SANT;AAYHC,QAAAA,SAAS,EAAE;AACPT,UAAAA,IAAI,EAAE;AADC;AAZR,OAPF;AAuBLU,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAAE;AADP,OAvBD;AA0BLC,MAAAA,MAAM,EAAErB,KAAK,CAACe,KAAN,GAAaf,KAAK,CAACe,KAAnB,GAA2B,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CA1B9B;AA2BLO,MAAAA,UAAU,EAAE;AACRC,QAAAA,OAAO,EAAE;AADD,OA3BP;AA8BLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE,OADN;AAEJb,QAAAA,OAAO,EAAE;AAFL,OA9BH;AAkCLc,MAAAA,WAAW,EAAE;AACTC,QAAAA,GAAG,EAAE;AACDC,UAAAA,WAAW,EAAE;AADZ;AADI,OAlCR;AAuCLC,MAAAA,KAAK,EAAE;AACHhB,QAAAA,MAAM,EAAE;AACJJ,UAAAA,IAAI,EAAE;AADF;AADL,OAvCF;AA4CLqB,MAAAA,IAAI,EAAE;AACFrB,QAAAA,IAAI,EAAE;AADJ,OA5CD;AA+CLsB,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAE,MADP;AAEHC,UAAAA,UAAU,EAAE;AAFT;AADF;AA/CJ,KADoC;AAuD7CC,IAAAA,MAAM,EACF,CAAC;AACGC,MAAAA,IAAI,EAAE,eADT;AAEGC,MAAAA,IAAI,EAAErC,KAAK,CAACmC,MAAN,GAAcnC,KAAK,CAACmC,MAApB,GAA4B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAFrC,KAAD;AAxDyC,GAAD,CAAhD;AA8DA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAE/B,YAAY,CAACC,OAD1B;AAEI,MAAA,MAAM,EAAED,YAAY,CAAC+B,MAFzB;AAGI,MAAA,IAAI,EAAC,KAHT;AAII,MAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH,CA9EM;;GAAMpC,K;;KAAAA,K","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n} from \"mdbreact\";\nimport Charts from \"react-apexcharts\";\nexport const Chart = (props: any) => {\n    console.log(props)\n    useEffect(() => {\n        console.log(\"re-render\")\n        setChartoptions(chartoptions)\n    }, [props]);\n    const [chartoptions, setChartoptions] = useState({\n        options: {\n            chart: {\n                id: \"bar\",\n                toolbar: {\n                    show: false\n                }\n            },\n            xaxis: {\n                categories: [\"Critical\", \"High\", \"Low\"],\n                offsetY: 5,\n                labels: {\n                    show: false\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#607d8b',\n                    height: 4,\n                    width: '100%',\n                },\n                axisTicks: {\n                    show: false\n                },\n            },\n            fill: {\n                opacity: 0.95\n            },\n            colors: props.color? props.color : ['#f44336', '#ff9800', '#2bbbad'],\n            dataLabels: {\n                enabled: false,\n            },\n            legend: {\n                position: \"right\",\n                offsetY: 40\n            },\n            plotOptions: {\n                bar: {\n                    distributed: true,\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                },\n            },\n            grid: {\n                show: false,\n            },\n            tooltip: {\n                style: {\n                    fontSize: '10px',\n                    fontFamily: 'Inter'\n                  }\n            }\n        },\n        series:\n            [{\n                name: \"Vulnearbility\",\n                data: props.series? props.series :[30, 40, 45],\n            }]\n\n    });\n    return (\n        <>\n            <Charts\n                options={chartoptions.options}\n                series={chartoptions.series}\n                type=\"bar\"\n                width=\"250\"\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}