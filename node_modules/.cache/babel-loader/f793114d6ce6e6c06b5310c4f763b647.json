{"ast":null,"code":"import _slicedToArray from\"/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Redirect}from'react-router';import{MDBContainer,MDBRow}from\"mdbreact\";import\"./style.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var PhaseSelector=function PhaseSelector(props){console.log(props);var _useState=useState(props.Kpi.metrics.vapt.defaultQuarter),_useState2=_slicedToArray(_useState,2),AccountList=_useState2[0],setAccountList=_useState2[1];useEffect(function(){props.AccountToggle(AccountList);},[props]);var AccountT=function AccountT(e){var newAccount=e.target.value;setAccountList(newAccount);props.AccountToggle(newAccount);};var token=localStorage.getItem(\"token\");if(token===null||token===undefined||token.length<0){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/login'}});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(MDBContainer,{fluid:true,style:{paddingBottom:\"2vw\"},children:/*#__PURE__*/_jsx(MDBRow,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"select\",{className:\"custom-select\",style:{width:\"250px\"},onChange:function onChange(e){return AccountT(e);},value:AccountList,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Quarter-1\",children:\"Quarter-1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Quarter-2\",children:\"Quarter-2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Quarter-3\",children:\"Quarter-3\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Quarter-4\",children:\"Quarter-4\"})]})})})})});};","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/src/components/dashboard/PhaseSelector.tsx"],"names":["React","useState","useEffect","Redirect","MDBContainer","MDBRow","PhaseSelector","props","console","log","Kpi","metrics","vapt","defaultQuarter","AccountList","setAccountList","AccountToggle","AccountT","e","newAccount","target","value","token","localStorage","getItem","undefined","length","pathname","paddingBottom","width"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,cAAzB,CAEA,OAQIC,YARJ,CAYIC,MAZJ,KAuBO,UAvBP,CA0BA,MAAO,aAAP,C,6IAGA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAgB,CACzCC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADyC,cAEHN,QAAQ,CAACM,KAAK,CAACG,GAAN,CAAUC,OAAV,CAAkBC,IAAlB,CAAuBC,cAAxB,CAFL,wCAElCC,WAFkC,eAErBC,cAFqB,eAGzCb,SAAS,CAAC,UAAM,CACRK,KAAK,CAACS,aAAN,CAAoBF,WAApB,EACP,CAFQ,CAEN,CAACP,KAAD,CAFM,CAAT,CAIA,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAY,CACzB,GAAMC,CAAAA,UAAU,CAAGD,CAAC,CAACE,MAAF,CAASC,KAA5B,CACAN,cAAc,CAACI,UAAD,CAAd,CACAZ,KAAK,CAACS,aAAN,CAAoBG,UAApB,EACH,CAJD,CAKA,GAAMG,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAIF,KAAK,GAAK,IAAV,EAAkBA,KAAK,GAAKG,SAA5B,EAAyCH,KAAK,CAACI,MAAN,CAAe,CAA5D,CAA+D,CAC3D,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,CACjBC,QAAQ,CAAE,QADO,CAAd,EAAP,CAGH,CACD,mBACI,sCACI,KAAC,YAAD,EAAc,KAAK,KAAnB,CAAoB,KAAK,CAAE,CAAEC,aAAa,CAAE,KAAjB,CAA3B,uBACI,KAAC,MAAD,wBACI,kCACI,gBAAQ,SAAS,CAAC,eAAlB,CAAkC,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAzC,CAA6D,QAAQ,CAAE,kBAACX,CAAD,QAAYD,CAAAA,QAAQ,CAACC,CAAD,CAApB,EAAvE,CAAgG,KAAK,CAAEJ,WAAvG,wBACS,eAAQ,KAAK,CAAC,WAAd,uBADT,cAES,eAAQ,KAAK,CAAC,WAAd,uBAFT,cAGS,eAAQ,KAAK,CAAC,WAAd,uBAHT,cAIS,eAAQ,KAAK,CAAC,WAAd,uBAJT,GADJ,EADJ,EADJ,EADJ,EADJ,CAgBH,CAlCM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBProgress,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBreadcrumb,\n    MDBBreadcrumbItem\n} from \"mdbreact\";\nimport { useHistory } from \"react-router\";\nimport { Chart } from \"react-google-charts\";\nimport \"./style.css\";\nimport domain from '../../assets/images/domain.png'\nimport { fetchData } from '../../services/apiConfig'\nexport const PhaseSelector = (props: any) => {\n    console.log(props)\n    const [AccountList, setAccountList] = useState(props.Kpi.metrics.vapt.defaultQuarter);\n    useEffect(() => {\n            props.AccountToggle(AccountList);\n    }, [props]);\n    \n    const AccountT = (e: any) => {\n        const newAccount = e.target.value;\n        setAccountList(newAccount)\n        props.AccountToggle(newAccount);\n    }\n    const token = localStorage.getItem(\"token\");\n    if (token === null || token === undefined || token.length < 0) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n    return (\n        <>\n            <MDBContainer fluid style={{ paddingBottom: \"2vw\"}}>\n                <MDBRow>\n                    <div>\n                        <select className=\"custom-select\" style={{ width: \"250px\" }} onChange={(e: any) => AccountT(e)} value={AccountList}>\n                                 <option value=\"Quarter-1\">Quarter-1</option>\n                                 <option value=\"Quarter-2\">Quarter-2</option>\n                                 <option value=\"Quarter-3\">Quarter-3</option>\n                                 <option value=\"Quarter-4\">Quarter-4</option>\n                        </select>\n                    </div>\n                </MDBRow>\n            </MDBContainer>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}