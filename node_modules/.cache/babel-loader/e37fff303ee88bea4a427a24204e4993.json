{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/common/VulnCatChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Charts from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CategoryChart = props => {\n  _s();\n\n  const [chartoptions, setChartoptions] = useState({\n    options: {\n      plotOptions: {\n        pie: {\n          expandOnClick: true\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      labels: [\"Comedy\", \"Action\", \"SciFi\", \"Drama\", \"Horror\"],\n      responsive: [{\n        breakpoint: 4,\n        options: {\n          chart: {\n            width: 1500\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }]\n    },\n    series: [44, 55, 41, 17, 15]\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Charts, {\n      options: chartoptions.options,\n      series: chartoptions.series,\n      type: \"donut\",\n      width: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(CategoryChart, \"ylr1PFfdqxFy+F7nK8bDP63Q+qM=\");\n\n_c = CategoryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryChart\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/common/VulnCatChart.tsx"],"names":["React","useState","Charts","CategoryChart","props","chartoptions","setChartoptions","options","plotOptions","pie","expandOnClick","dataLabels","enabled","labels","responsive","breakpoint","chart","width","legend","position","series"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,QAAmD,OAAnD;AAKA,OAAOC,MAAP,MAAmB,kBAAnB;;;AACA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAgB;AAAA;;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC;AAC7CM,IAAAA,OAAO,EAAE;AACLC,MAAAA,WAAW,EAAE;AACTC,QAAAA,GAAG,EAAE;AACDC,UAAAA,aAAa,EAAE;AADd;AADI,OADR;AAMLC,MAAAA,UAAU,EAAE;AACRC,QAAAA,OAAO,EAAE;AADD,OANP;AASLC,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8B,OAA9B,EAAuC,QAAvC,CATH;AAULC,MAAAA,UAAU,EAAE,CAAC;AACTC,QAAAA,UAAU,EAAE,CADH;AAETR,QAAAA,OAAO,EAAE;AACLS,UAAAA,KAAK,EAAE;AACHC,YAAAA,KAAK,EAAE;AADJ,WADF;AAILC,UAAAA,MAAM,EAAE;AACJC,YAAAA,QAAQ,EAAE;AADN;AAJH;AAFA,OAAD;AAVP,KADoC;AAuB7CC,IAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB;AAvBqC,GAAD,CAAhD;AA0BA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAEf,YAAY,CAACE,OAD1B;AAEI,MAAA,MAAM,EAAEF,YAAY,CAACe,MAFzB;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH,CArCM;;GAAMjB,a;;KAAAA,a","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n} from \"mdbreact\";\nimport Charts from \"react-apexcharts\";\nexport const CategoryChart = (props: any) => {\n    const [chartoptions, setChartoptions] = useState({\n        options: {\n            plotOptions: {\n                pie: {\n                    expandOnClick: true\n                }\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            labels: [\"Comedy\", \"Action\", \"SciFi\", \"Drama\", \"Horror\"],\n            responsive: [{\n                breakpoint: 4,\n                options: {\n                    chart: {\n                        width: 1500\n                    },\n                    legend: {\n                        position: 'bottom'\n                    }\n                }\n            }]\n        },\n        series: [44, 55, 41, 17, 15],\n\n    });\n    return (\n        <>\n            <Charts\n                options={chartoptions.options}\n                series={chartoptions.series}\n                type=\"donut\"\n                width=\"300\"\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}