{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/common/GradeChart.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Charts from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GradeChart = props => {\n  _s();\n\n  const [chartoptions, setChartoptions] = useState({\n    series: [80],\n    options: {\n      chart: {\n        offsetY: 20,\n        sparkline: {\n          enabled: true\n        }\n      },\n      title: {\n        text: \"Vulnerability grade\",\n        margin: 10,\n        offsetX: 0,\n        offsetY: 0,\n        floating: false\n      },\n      colors: props.color ? props.color : ['#787878', '#ff9800', '#2bbbad'],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#e7e7e7\",\n            strokeWidth: '97%',\n            margin: 5,\n            // margin is in pixels\n            dropShadow: {\n              enabled: true,\n              top: 2,\n              left: 0,\n              color: '#fff',\n              opacity: 1,\n              blur: 2\n            }\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              offsetY: -2,\n              fontSize: '22px'\n            }\n          }\n        }\n      },\n      grid: {\n        padding: {\n          top: -10\n        }\n      },\n      fill: {\n        opacity: 0.95 // gradient: {\n        //   shade: 'light',\n        //   shadeIntensity: 0.4,\n        //   inverseColors: false,\n        //   opacityFrom: 1,\n        //   opacityTo: 1,\n        //   stops: [0, 50, 53, 91]\n        // },\n\n      },\n      labels: ['Average Results']\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Charts, {\n      options: chartoptions.options,\n      series: chartoptions.series,\n      type: \"radialBar\",\n      width: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(GradeChart, \"wl2RvffDn6DprSwGNkaRL//68gs=\");\n\n_c = GradeChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"GradeChart\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/common/GradeChart.tsx"],"names":["React","useState","Charts","GradeChart","props","chartoptions","setChartoptions","series","options","chart","offsetY","sparkline","enabled","title","text","margin","offsetX","floating","colors","color","plotOptions","radialBar","startAngle","endAngle","track","background","strokeWidth","dropShadow","top","left","opacity","blur","dataLabels","name","show","value","fontSize","grid","padding","fill","labels"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,QAAmD,OAAnD;AAKA,OAAOC,MAAP,MAAmB,kBAAnB;;;AACA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAgB;AAAA;;AACtC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC;AAC7CM,IAAAA,MAAM,EAAE,CAAC,EAAD,CADqC;AAE7CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,EADJ;AAELC,QAAAA,SAAS,EAAE;AACTC,UAAAA,OAAO,EAAE;AADA;AAFN,OADA;AAOPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,qBADD;AAELC,QAAAA,MAAM,EAAE,EAFH;AAGLC,QAAAA,OAAO,EAAE,CAHJ;AAILN,QAAAA,OAAO,EAAE,CAJJ;AAKLO,QAAAA,QAAQ,EAAE;AALL,OAPA;AAeTC,MAAAA,MAAM,EAAEd,KAAK,CAACe,KAAN,GAAaf,KAAK,CAACe,KAAnB,GAA2B,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAf1B;AAgBPC,MAAAA,WAAW,EAAE;AACXC,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE,CAAC,EADJ;AAETC,UAAAA,QAAQ,EAAE,EAFD;AAGTC,UAAAA,KAAK,EAAE;AACLC,YAAAA,UAAU,EAAE,SADP;AAELC,YAAAA,WAAW,EAAE,KAFR;AAGLX,YAAAA,MAAM,EAAE,CAHH;AAGM;AACXY,YAAAA,UAAU,EAAE;AACVf,cAAAA,OAAO,EAAE,IADC;AAEVgB,cAAAA,GAAG,EAAE,CAFK;AAGVC,cAAAA,IAAI,EAAE,CAHI;AAIVV,cAAAA,KAAK,EAAE,MAJG;AAKVW,cAAAA,OAAO,EAAE,CALC;AAMVC,cAAAA,IAAI,EAAE;AANI;AAJP,WAHE;AAgBTC,UAAAA,UAAU,EAAE;AACVC,YAAAA,IAAI,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF,aADI;AAIVC,YAAAA,KAAK,EAAE;AACLzB,cAAAA,OAAO,EAAE,CAAC,CADL;AAEL0B,cAAAA,QAAQ,EAAE;AAFL;AAJG;AAhBH;AADA,OAhBN;AA4CPC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AACPV,UAAAA,GAAG,EAAE,CAAC;AADC;AADL,OA5CC;AAiDPW,MAAAA,IAAI,EAAE;AACJT,QAAAA,OAAO,EAAE,IADL,CAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATI,OAjDC;AA4DPU,MAAAA,MAAM,EAAE,CAAC,iBAAD;AA5DD;AAFoC,GAAD,CAAhD;AAkEA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAEnC,YAAY,CAACG,OAD1B;AAEI,MAAA,MAAM,EAAEH,YAAY,CAACE,MAFzB;AAGI,MAAA,IAAI,EAAC,WAHT;AAII,MAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH,CA7EM;;GAAMJ,U;;KAAAA,U","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n} from \"mdbreact\";\nimport Charts from \"react-apexcharts\";\nexport const GradeChart = (props: any) => {\n    const [chartoptions, setChartoptions] = useState({\n        series: [80],\n        options: {\n          chart: {\n            offsetY: 20,\n            sparkline: {\n              enabled: true\n            }\n          },\n          title: {\n            text: \"Vulnerability grade\",\n            margin: 10,\n            offsetX: 0,\n            offsetY: 0,\n            floating: false,\n           \n        },\n        colors: props.color? props.color : ['#787878', '#ff9800', '#2bbbad'],\n          plotOptions: {\n            radialBar: {\n              startAngle: -90,\n              endAngle: 90,\n              track: {\n                background: \"#e7e7e7\",\n                strokeWidth: '97%',\n                margin: 5, // margin is in pixels\n                dropShadow: {\n                  enabled: true,\n                  top: 2,\n                  left: 0,\n                  color: '#fff',\n                  opacity: 1,\n                  blur: 2\n                }\n              },\n              dataLabels: {\n                name: {\n                  show: false\n                },\n                value: {\n                  offsetY: -2,\n                  fontSize: '22px'\n                }\n              }\n            }\n          },\n          grid: {\n            padding: {\n              top: -10\n            }\n          },\n          fill: {\n            opacity: 0.95\n            // gradient: {\n            //   shade: 'light',\n            //   shadeIntensity: 0.4,\n            //   inverseColors: false,\n            //   opacityFrom: 1,\n            //   opacityTo: 1,\n            //   stops: [0, 50, 53, 91]\n            // },\n          },\n          labels: ['Average Results'],\n        },\n    });\n   \n    return (\n        <>\n            <Charts\n                options={chartoptions.options}\n                series={chartoptions.series}\n                type=\"radialBar\"\n                width=\"200\"\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}