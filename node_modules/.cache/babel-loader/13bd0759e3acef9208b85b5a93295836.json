{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/src/components/dashboard/Subservices.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { MDBCol, MDBContainer, MDBRow, MDBBreadcrumbItem, MDBBreadcrumb, MDBCollapse, MDBBadge } from \"mdbreact\";\nimport \"./style.css\";\nimport { fetchData } from '../../services/apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Subservices = props => {\n  _s();\n\n  const [subDomainfullList, setsubDomainfullList] = useState([\"subDomains\"]);\n  const [subDomains, setSubDomains] = useState([\"subDomains\"]);\n  const [collapseID, setCollapseID] = useState(\"\");\n  const [vulnerability, setVulnerability] = useState('all');\n  const [isprivate, setisprivate] = useState('all');\n  const [isresolved, setisresolved] = useState();\n  console.log(props);\n  let totalCount = 10;\n  totalCount = props.Service.criticalCount + props.Service.highCount + props.Service.lowCount + props.Service.mediumCount;\n  console.log(totalCount);\n  useEffect(() => {\n    fetchData('resources', 'GET', \"?accountName=\" + props.Account + \"&resource=\" + props.Service.name).then(res => {\n      console.log(res);\n\n      if (res.message === \"Scanning is in progress..\") {\n        props.SwitchView('scan');\n      }\n\n      setSubDomains(res);\n      setsubDomainfullList(res);\n    });\n  }, [isresolved]);\n\n  const toggleCollapse = collapseid => {\n    if (collapseid !== collapseID) {\n      setCollapseID(collapseid);\n    } else {\n      setCollapseID(\"\");\n    }\n  }; // const Vulnerability = async (e: any) => {\n  //     setVulnerability(e.target.value);\n  //     console.log(e.target.value)\n  //     console.log(subDomainfullList)\n  //     let filter = e.target.value\n  //     let filteredSubDomain: any = new Array();\n  //     const response = await subDomainfullList.map((subD: any) => {\n  //         console.log(subD[filter])\n  //         if (subD[filter] !== \"0\") {\n  //             console.log(subD)\n  //             filteredSubDomain.push(subD)\n  //             console.log(filteredSubDomain)\n  //         }\n  //     })\n  //     setSubDomains(filteredSubDomain)\n  // }\n  // const isPrivate = async (e: any) => {\n  //     setisprivate(e.target.value);\n  //     let filter = e.target.value\n  //     let filteredSubDomain: any = new Array();\n  //     const response = await subDomainfullList.map((subD: any) => {\n  //         console.log(subD[filter])\n  //         if (subD.isPrivate === filter && filter !== 'all') {\n  //             console.log(subD)\n  //             filteredSubDomain.push(subD)\n  //             console.log(filteredSubDomain)\n  //         }\n  //     })\n  //     if (filter === \"all\") {\n  //         filteredSubDomain = subDomainfullList\n  //     }\n  //     setSubDomains(filteredSubDomain)\n  // }\n  // const markResolved = (e: any) => {\n  //     fetchData('subdomain/bug/', 'GET', e).then((res: any) => {\n  //         setisresolved(e)\n  //         console.log(res)\n  //     })\n  // }\n\n\n  const token = localStorage.getItem(\"token\");\n\n  if (token === null || token === undefined || token.length < 0) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 16\n    }, this);\n  }\n\n  const dummy = [\"abc\", \"cdf\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      fluid: true,\n      className: \"pb-5\",\n      style: {\n        padding: \"2vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n        children: /*#__PURE__*/_jsxDEV(MDBCol, {\n          sm: \"11\",\n          md: \"11\",\n          lg: \"11\",\n          style: {\n            padding: \"0px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(MDBBreadcrumb, {\n            children: [/*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n              onClick: () => props.SwitchView('home'),\n              style: {\n                cursor: \"pointer\",\n                marginLeft: \"20px\"\n              },\n              children: \"dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n              onClick: () => props.SwitchView('assets'),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: \"assets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n              onClick: () => props.SwitchView('services'),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: \"services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n              active: true,\n              children: props.Service.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: /*#__PURE__*/_jsxDEV(MDBCol, {\n          sm: \"11\",\n          md: \"11\",\n          lg: \"11\",\n          style: {\n            padding: \"10px 25px\",\n            border: \"1px solid #ededef\",\n            backgroundColor: \"rgb(237, 237, 239)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n            md: \"12\",\n            lg: \"12\",\n            style: {\n              display: \"inline-flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-dark font-weight-bold\",\n              style: {\n                fontSize: \"20px\",\n                paddingTop: \"10px\"\n              },\n              children: props.Service.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-dark\",\n              style: {\n                fontSize: \"12px\",\n                marginLeft: \"10px\",\n                paddingTop: \"20px\"\n              },\n              children: \"213 available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxHeight: \"72vh\",\n              overflowY: \"auto\",\n              overflowX: \"hidden\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              style: {\n                listStyle: \"none\",\n                fontSize: \"15px\",\n                marginTop: \"2vw\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"white\"\n                },\n                children: subDomains.map((subD, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"subDomainVulnearbility\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: subD.totalCount > 0 ? \"red-text list-group-item-pentest\" : \"green-text list-group-item-pentest\",\n                    onClick: () => toggleCollapse(\"collapse\" + index++),\n                    children: [subD.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: subD.totalCount > 0 ? \"red-text vbadge\" : \"green-text vbadge\",\n                      children: [subD.totalCount, \"  issues \\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: collapseID !== \"\" ? \"fa fa-angle-right\" : \"fa fa-angle-down\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(MDBCollapse, {\n                    id: \"collapse\" + index,\n                    isOpen: collapseID,\n                    children: [subD.critical ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n                        style: {\n                          backgroundColor: \"#f5c6cb\",\n                          color: \"darkred\"\n                        },\n                        className: \"subDomainVulnearbility\",\n                        children: [/*#__PURE__*/_jsxDEV(MDBBadge, {\n                          className: \"subDomainBadge\",\n                          color: \"danger\",\n                          children: \"High\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 57\n                        }, this), Object.keys(subD.critical).map(key => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              width: \"100%\",\n                              marginLeft: \"2vw\",\n                              fontSize: \"12px\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 192,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                              children: [subD.critical[key], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 195,\n                                columnNumber: 65\n                              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 195,\n                                columnNumber: 72\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 193,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 191,\n                            columnNumber: 68\n                          }, this);\n                        })]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 62\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 77\n                    }, this), subD.high ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n                        style: {\n                          backgroundColor: \"#f5c6cb\",\n                          color: \"darkred\"\n                        },\n                        className: \"subDomainVulnearbility\",\n                        children: [/*#__PURE__*/_jsxDEV(MDBBadge, {\n                          className: \"subDomainBadge\",\n                          color: \"danger\",\n                          children: \"High\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 204,\n                          columnNumber: 61\n                        }, this), Object.keys(subD.high).map(key => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              width: \"100%\",\n                              marginLeft: \"2vw\",\n                              fontSize: \"12px\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 207,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                              children: [subD.high[key], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 210,\n                                columnNumber: 69\n                              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 210,\n                                columnNumber: 76\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 208,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 206,\n                            columnNumber: 72\n                          }, this);\n                        })]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 66\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 81\n                    }, this), subD.medium ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n                        style: {\n                          backgroundColor: \"#ffeeba\",\n                          color: \"chocolate\"\n                        },\n                        className: \"subDomainVulnearbility\",\n                        children: [/*#__PURE__*/_jsxDEV(MDBBadge, {\n                          className: \"subDomainBadge\",\n                          color: \"warning\",\n                          children: \"Medium\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 53\n                        }, this), Object.keys(subD.medium).map(key => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              width: \"100%\",\n                              marginLeft: \"2vw\",\n                              fontSize: \"12px\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 222,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                              children: [subD.medium[key], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 225,\n                                columnNumber: 69\n                              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 225,\n                                columnNumber: 76\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 223,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 68\n                          }, this);\n                        })]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 62\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 77\n                    }, this), subD.low ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n                        style: {\n                          backgroundColor: \"#c3e6cb\",\n                          color: \"darkgreen\"\n                        },\n                        className: \"subDomainVulnearbility\",\n                        children: [/*#__PURE__*/_jsxDEV(MDBBadge, {\n                          className: \"subDomainBadge\",\n                          color: \"success\",\n                          children: \"Low\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 61\n                        }, this), Object.keys(subD.low).map(key => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              width: \"100%\",\n                              marginLeft: \"2vw\",\n                              fontSize: \"12px\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 237,\n                              columnNumber: 64\n                            }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                              children: [subD.low[key], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 240,\n                                columnNumber: 68\n                              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 240,\n                                columnNumber: 75\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 238,\n                              columnNumber: 64\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 71\n                          }, this);\n                        })]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 66\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 81\n                    }, this), totalCount === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n                        style: {\n                          color: \"black\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            width: \"100%\",\n                            marginLeft: \"2vw\",\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            display: \"flex\",\n                            justifyContent: \"center\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 251,\n                            columnNumber: 60\n                          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                            children: [\"! No issues found\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 254,\n                              columnNumber: 64\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 252,\n                            columnNumber: 60\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 250,\n                          columnNumber: 60\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 62\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 77\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Subservices, \"evVCMp/8HXJ33JHchp90TKhKbZI=\");\n\n_c = Subservices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subservices\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/src/components/dashboard/Subservices.tsx"],"names":["React","useState","useEffect","Redirect","MDBCol","MDBContainer","MDBRow","MDBBreadcrumbItem","MDBBreadcrumb","MDBCollapse","MDBBadge","fetchData","Subservices","props","subDomainfullList","setsubDomainfullList","subDomains","setSubDomains","collapseID","setCollapseID","vulnerability","setVulnerability","isprivate","setisprivate","isresolved","setisresolved","console","log","totalCount","Service","criticalCount","highCount","lowCount","mediumCount","Account","name","then","res","message","SwitchView","toggleCollapse","collapseid","token","localStorage","getItem","undefined","length","pathname","dummy","padding","cursor","marginLeft","border","backgroundColor","display","fontSize","paddingTop","maxHeight","overflowY","overflowX","listStyle","marginTop","map","subD","index","critical","color","Object","keys","key","width","high","medium","low","fontWeight","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBProgress,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBreadcrumbItem,\n    MDBBreadcrumb,\n    MDBCollapse,\n    MDBNotification,\n    MDBBadge,\n} from \"mdbreact\";\nimport \"./style.css\";\nimport { fetchData } from '../../services/apiConfig'\nimport { useWatch } from \"react-hook-form\";\n\nexport const Subservices = (props: any) => {\n    const [subDomainfullList, setsubDomainfullList] = useState([\"subDomains\"]);\n    const [subDomains, setSubDomains] = useState([\"subDomains\"]);\n    const [collapseID, setCollapseID] = useState(\"\");\n    const [vulnerability, setVulnerability] = useState('all');\n    const [isprivate, setisprivate] = useState('all')\n    const [isresolved, setisresolved] = useState()\n    console.log(props)\n    let totalCount = 10;\n    totalCount = props.Service.criticalCount + props.Service.highCount + props.Service.lowCount + props.Service.mediumCount;\n    console.log(totalCount)\n    useEffect(() => {\n        fetchData('resources', 'GET', \"?accountName=\" + props.Account + \"&resource=\" + props.Service.name).then((res: any) => {\n            console.log(res)\n            if(res.message === \"Scanning is in progress..\"){\n                props.SwitchView('scan')\n            } \n            setSubDomains(res)\n            setsubDomainfullList(res)\n        })\n    },[isresolved]);\n\n    const toggleCollapse = (collapseid: any) => {\n        if (collapseid !== collapseID) {\n            setCollapseID(collapseid)\n        } else {\n            setCollapseID(\"\")\n        }\n    }\n    // const Vulnerability = async (e: any) => {\n    //     setVulnerability(e.target.value);\n    //     console.log(e.target.value)\n    //     console.log(subDomainfullList)\n    //     let filter = e.target.value\n    //     let filteredSubDomain: any = new Array();\n    //     const response = await subDomainfullList.map((subD: any) => {\n    //         console.log(subD[filter])\n    //         if (subD[filter] !== \"0\") {\n    //             console.log(subD)\n    //             filteredSubDomain.push(subD)\n    //             console.log(filteredSubDomain)\n    //         }\n    //     })\n    //     setSubDomains(filteredSubDomain)\n    // }\n    // const isPrivate = async (e: any) => {\n    //     setisprivate(e.target.value);\n    //     let filter = e.target.value\n    //     let filteredSubDomain: any = new Array();\n    //     const response = await subDomainfullList.map((subD: any) => {\n    //         console.log(subD[filter])\n    //         if (subD.isPrivate === filter && filter !== 'all') {\n    //             console.log(subD)\n    //             filteredSubDomain.push(subD)\n    //             console.log(filteredSubDomain)\n    //         }\n    //     })\n    //     if (filter === \"all\") {\n    //         filteredSubDomain = subDomainfullList\n    //     }\n    //     setSubDomains(filteredSubDomain)\n    // }\n    // const markResolved = (e: any) => {\n    //     fetchData('subdomain/bug/', 'GET', e).then((res: any) => {\n    //         setisresolved(e)\n    //         console.log(res)\n    //     })\n    // }\n    const token = localStorage.getItem(\"token\");\n    if (token === null || token === undefined || token.length < 0) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n    const dummy = [\"abc\", \"cdf\"]\n    return (\n        <>\n            <MDBContainer fluid className=\"pb-5\" style={{ padding: \"2vw\" }}>\n                <MDBRow>\n                    <MDBCol sm=\"11\" md=\"11\" lg=\"11\" style={{ padding: \"0px\" }}>\n                        <MDBBreadcrumb >\n                                <MDBBreadcrumbItem onClick={() => props.SwitchView('home')} style={{ cursor: \"pointer\", marginLeft: \"20px\" }} >dashboard</MDBBreadcrumbItem>\n                                 <MDBBreadcrumbItem onClick={() => props.SwitchView('assets')} style={{ cursor: \"pointer\" }}>assets</MDBBreadcrumbItem>\n                                 <MDBBreadcrumbItem onClick={() => props.SwitchView('services')} style={{ cursor: \"pointer\" }}>services</MDBBreadcrumbItem>\n                                  <MDBBreadcrumbItem active>{props.Service.name}</MDBBreadcrumbItem>\n                        </MDBBreadcrumb>\n                    </MDBCol>\n                </MDBRow>\n\n                <MDBRow>\n                    <MDBCol sm=\"11\" md=\"11\" lg=\"11\" style={{ padding: \"10px 25px\", border: \"1px solid #ededef\", backgroundColor: \"rgb(237, 237, 239)\" }}>\n                        <MDBRow md=\"12\" lg=\"12\" style={{ display: \"inline-flex\" }}>\n                            <p className='text-dark font-weight-bold' style={{ fontSize: \"20px\", paddingTop: \"10px\" }}>{props.Service.name}</p>\n                            <span className='text-dark' style={{ fontSize: \"12px\", marginLeft: \"10px\", paddingTop: \"20px\" }}>213 available</span>\n                        </MDBRow>\n                        <MDBRow>\n\n                            {/* <div>\n                                <select className=\"custom-select\" style={{ width: \"250px\" }} >\n                                    <option value=\"all\" >All</option>\n                                    <option value=\"Sub domain takeover\" >Sub domain takeover</option>\n                                    <option value=\"CVE\" >CVE</option>\n                                    <option value=\"Leaky directory\" >Leaky directory</option>\n                                </select>\n                            </div> */}\n                            {/* <div>\n                                <select className=\"custom-select\" style={{ width: \"250px\" }} onChange={(e: any) => isPrivate(e)} value={isprivate}>\n                                    <option value=\"all\" >All</option>\n                                    <option value=\"true\" >Private</option>\n                                    <option value=\"false\" >Public</option>\n                                </select>\n                            </div> */}\n                            {/* <div>\n                                <select className=\"custom-select\" style={{ width: \"250px\" }} onChange={(e: any) => Vulnerability(e)} value={vulnerability}>\n                                    <option value=\"totalCount\" >All</option>\n                                    <option value=\"criticalCount\" >Critical</option>\n                                    <option value=\"highCount\" >High</option>\n                                    <option value=\"mediumCount\" >Medium</option>\n                                    <option value=\"lowCount\" >Low</option>\n                                </select>\n                            </div> */}\n\n                            {/* <MDBFormInline className=\"md-form\">\n                                    <MDBIcon icon=\"search\" />\n                                    <input className=\"form-control form-control-sm\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\n                                </MDBFormInline> */}\n                        </MDBRow>\n\n                        {/* <MDBRow>\n                            <MDBCol md=\"6\">\n                                <MDBFormInline className=\"md-form\">\n                                    <MDBIcon icon=\"search\" />\n                                    <input className=\"form-control form-control-sm ml-3 w-75\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\n                                </MDBFormInline>\n                            </MDBCol>\n                        </MDBRow> */}\n                        <div style={{ maxHeight: \"72vh\", overflowY: \"auto\", overflowX: \"hidden\" }}>\n                            <ul className=\"list-group\" style={{ listStyle: \"none\", fontSize: \"15px\", marginTop: \"2vw\" }}>\n                                <div style={{ backgroundColor: \"white\" }}>\n                                    {subDomains.map((subD: any, index: any) =>\n                                        <div className=\"subDomainVulnearbility\">\n                                            <li className={subD.totalCount > 0 ? \"red-text list-group-item-pentest\" : \"green-text list-group-item-pentest\"} \n                                             onClick={() =>\n                                                toggleCollapse(\"collapse\" + index++)}>{subD.name}\n                                                <span className={subD.totalCount > 0 ? \"red-text vbadge\" : \"green-text vbadge\"}>{subD.totalCount}  issues &nbsp;\n                                                    <i className={collapseID !== \"\" ? \"fa fa-angle-right\" : \"fa fa-angle-down\"} /></span>\n                                            </li>\n\n\n                                            <MDBCollapse id={\"collapse\" + index} isOpen={collapseID}>\n\n                                                {subD.critical ?\n                                                    <div>\n                                                    <MDBRow style={{ backgroundColor: \"#f5c6cb\", color: \"darkred\" }} className=\"subDomainVulnearbility\">\n                                                        <MDBBadge className=\"subDomainBadge\" color=\"danger\">High</MDBBadge>\n                                                        {(Object.keys(subD.critical)).map((key: any) => {\n                                                            return <div style={{ width: \"100%\", marginLeft: \"2vw\", fontSize: \"12px\" }}>\n                                                            <br />\n                                                            <MDBRow>\n                                                                    {subD.critical[key]}\n                                                                <br /> <br />\n                                                            </MDBRow>\n                                                        </div>\n                                                        })}\n                                                    </MDBRow><br /></div> : <div />\n                                                }\n                                                {subD.high ?\n                                                    <div>\n                                                        <MDBRow style={{ backgroundColor: \"#f5c6cb\", color: \"darkred\" }} className=\"subDomainVulnearbility\">\n                                                            <MDBBadge className=\"subDomainBadge\" color=\"danger\">High</MDBBadge>\n                                                            {(Object.keys(subD.high)).map((key: any) => {\n                                                                return <div style={{ width: \"100%\", marginLeft: \"2vw\", fontSize: \"12px\" }}>\n                                                                <br />\n                                                                <MDBRow>\n                                                                        {subD.high[key]}\n                                                                    <br /> <br />\n                                                                </MDBRow>\n                                                            </div>\n                                                            })}\n                                                        </MDBRow><br /></div> : <div />\n                                                }\n                                                {subD.medium ?\n                                                    <div>\n                                                    <MDBRow style={{ backgroundColor: \"#ffeeba\", color: \"chocolate\" }} className=\"subDomainVulnearbility\">\n                                                    <MDBBadge className=\"subDomainBadge\" color=\"warning\">Medium</MDBBadge>\n                                                        {(Object.keys(subD.medium)).map((key: any) => {\n                                                            return <div style={{ width: \"100%\", marginLeft: \"2vw\", fontSize: \"12px\" }}>\n                                                                <br />\n                                                                <MDBRow>\n                                                                        {subD.medium[key]}\n                                                                    <br /> <br />\n                                                                </MDBRow>\n                                                            </div>\n                                                        })}\n                                                    </MDBRow><br /></div> : <div />\n                                                }\n                                                {subD.low ?\n                                                    <div>\n                                                        <MDBRow style={{ backgroundColor: \"#c3e6cb\", color: \"darkgreen\" }} className=\"subDomainVulnearbility\">\n                                                            <MDBBadge className=\"subDomainBadge\" color=\"success\">Low</MDBBadge>\n                                                            {(Object.keys(subD.low)).map((key: any) => {\n                                                               return <div style={{ width: \"100%\", marginLeft: \"2vw\", fontSize: \"12px\" }}>\n                                                               <br />\n                                                               <MDBRow>\n                                                                       {subD.low[key]}\n                                                                   <br /> <br />\n                                                               </MDBRow>\n                                                           </div>\n                                                            })}\n                                                        </MDBRow><br /></div> : <div />\n                                                }\n                                                {totalCount === 0 ?\n                                                    <div>\n                                                    <MDBRow style={{ color: \"black\"}} >\n                                                        {/* <MDBBadge className=\"subDomainBadge\" color=\"info\">Low</MDBBadge> */}\n                                                           <div style={{ width: \"100%\", marginLeft: \"2vw\", fontSize: \"12px\", fontWeight: \"bold\", display: \"flex\", justifyContent: \"center\" }}>\n                                                           <br />\n                                                           <MDBRow>\n                                                                 ! No issues found\n                                                               <br /> \n                                                           </MDBRow>\n                                                       </div>\n                                                    </MDBRow><br /></div> : <div />\n                                                }\n                                            </MDBCollapse>\n                                        </div>\n                                    )}\n                                </div>\n                            </ul>\n                        </div>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}