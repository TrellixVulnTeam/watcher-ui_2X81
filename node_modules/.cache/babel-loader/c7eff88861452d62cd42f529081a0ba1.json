{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/dashboard/Home.tsx\";\nimport React from \"react\";\nimport { Redirect } from 'react-router';\nimport { MDBBtn, MDBContainer, MDBIcon, MDBRow } from \"mdbreact\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = props => {\n  console.log(props);\n\n  if (props.User === undefined) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      className: \"pt-5 pb-5\",\n      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n        style: {\n          padding: \"10px\",\n          border: \"1px solid #ededef\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-light font-weight-bold\",\n          style: {\n            fontSize: \"22px\",\n            paddingTop: \"10px\"\n          },\n          children: \"Organisation health\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            style: {\n              border: \"2px solid #2bbbad\",\n              borderRadius: \"10px\",\n              marginLeft: \"20px\"\n            },\n            children: [\"Scan\", /*#__PURE__*/_jsxDEV(MDBIcon, {\n              icon: \"sync-alt\",\n              style: {\n                fontSize: \"10px\",\n                marginLeft: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-dark\",\n          style: {\n            fontSize: \"12px\",\n            marginLeft: \"10px\",\n            paddingTop: \"20px\"\n          },\n          children: \"Last synced 6th June 18:05\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            width: 400,\n            height: 120,\n            chartType: \"Gauge\",\n            loader: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this),\n            data: [['Label', 'Value'], ['Memory', 20], ['CPU', 30], ['Network', 40]],\n            options: {\n              redFrom: 90,\n              redTo: 100,\n              yellowFrom: 75,\n              yellowTo: 90,\n              minorTicks: 5\n            },\n            rootProps: {\n              'data-testid': '1'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        width: 400,\n        height: 300,\n        chartType: \"ColumnChart\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this),\n        data: [['City', '2010 Population', '2000 Population'], ['New York City, NY', 8175000, 8008000], ['Los Angeles, CA', 3792000, 3694000], ['Chicago, IL', 2695000, 2896000], ['Houston, TX', 2099000, 1953000], ['Philadelphia, PA', 1526000, 1517000]],\n        options: {\n          title: 'Population of Largest U.S. Cities',\n          chartArea: {\n            width: '30%'\n          },\n          hAxis: {\n            title: 'Total Population',\n            minValue: 0\n          },\n          vAxis: {\n            title: 'City'\n          }\n        },\n        legendToggle: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/dashboard/Home.tsx"],"names":["React","Redirect","MDBBtn","MDBContainer","MDBIcon","MDBRow","Chart","Home","props","console","log","User","undefined","pathname","padding","border","fontSize","paddingTop","borderRadius","marginLeft","redFrom","redTo","yellowFrom","yellowTo","minorTicks","title","chartArea","width","hAxis","minValue","vAxis"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBProgress\n} from \"mdbreact\";\nimport { useHistory } from \"react-router\";\nimport { Chart } from \"react-google-charts\";\n\nexport const Home = (props: any) => {\n    console.log(props)\n    if (props.User === undefined) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n\n    return (\n        <>\n            <MDBContainer className=\"pt-5 pb-5\">\n                <MDBRow style={{ padding: \"10px\", border: \"1px solid #ededef\" }}>\n                    <p className='text-light font-weight-bold' style={{ fontSize: \"22px\", paddingTop: \"10px\" }}>Organisation health</p>\n                    <div>\n                        <MDBBtn style={{ border: \"2px solid #2bbbad\", borderRadius: \"10px\", marginLeft: \"20px\" }}>Scan\n                <MDBIcon icon=\"sync-alt\" style={{ fontSize: \"10px\", marginLeft: \"5px\" }} /></MDBBtn>\n                    </div>\n                    <span className='text-dark' style={{ fontSize: \"12px\", marginLeft: \"10px\", paddingTop: \"20px\" }}>Last synced 6th June 18:05</span>\n                    <div>\n                        <Chart\n                            width={400}\n                            height={120}\n                            chartType=\"Gauge\"\n                            loader={<div>Loading Chart</div>}\n                            data={[\n                                ['Label', 'Value'],\n                                ['Memory', 20],\n                                ['CPU', 30],\n                                ['Network', 40],\n                            ]}\n                            options={{\n                                redFrom: 90,\n                                redTo: 100,\n                                yellowFrom: 75,\n                                yellowTo: 90,\n                                minorTicks: 5,\n                            }}\n                            rootProps={{ 'data-testid': '1' }}\n                        />\n                    </div>\n                </MDBRow>\n\n\n                <Chart\n                    width={400}\n                    height={300}\n                    chartType=\"ColumnChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                        ['City', '2010 Population', '2000 Population'],\n                        ['New York City, NY', 8175000, 8008000],\n                        ['Los Angeles, CA', 3792000, 3694000],\n                        ['Chicago, IL', 2695000, 2896000],\n                        ['Houston, TX', 2099000, 1953000],\n                        ['Philadelphia, PA', 1526000, 1517000],\n                    ]}\n                    options={{\n                        title: 'Population of Largest U.S. Cities',\n                        chartArea: { width: '30%' },\n                        hAxis: {\n                            title: 'Total Population',\n                            minValue: 0,\n                        },\n                        vAxis: {\n                            title: 'City',\n                        },\n                    }}\n                    legendToggle\n                />\n\n            </MDBContainer>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}