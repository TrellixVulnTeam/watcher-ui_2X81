{"ast":null,"code":"import _slicedToArray from\"/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Charts from\"react-apexcharts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var TimeSeries=function TimeSeries(props){var _useState=useState({series:[{name:\"Critical\",data:[45,52,38,24,33,26,21,20,6,8,15,10]},{name:\"High\",data:[35,41,42,42,29,18,29,37,34,26,20,17]},{name:'Medium',data:[46,47,44,49,35,38,22,47,32,26,25,17]},{name:'Low',data:[43,37,41,42,32,36,29,37,32,26,25,17]}],options:{chart:{type:'line',zoom:{enabled:false}},colors:props.color?props.color:['#f44336','#ff9800','#0784eb','#2bbbad'],dataLabels:{enabled:false},stroke:{width:[2,3,2],dashArray:[0,5,3]},xaxis:{categories:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']},grid:{borderColor:'#f1f1f1'},legend:{show:false},responsive:[{breakpoint:480,options:{chart:{width:500},legend:{position:'bottom'}}}]}}),_useState2=_slicedToArray(_useState,2),chartoptions=_useState2[0],setChartoptions=_useState2[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Charts,{options:chartoptions.options,series:chartoptions.series,type:\"line\",height:\"170\"})});};","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/src/components/common/TimeSeries.tsx"],"names":["React","useState","Charts","TimeSeries","props","series","name","data","options","chart","type","zoom","enabled","colors","color","dataLabels","stroke","width","dashArray","xaxis","categories","grid","borderColor","legend","show","responsive","breakpoint","position","chartoptions","setChartoptions"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAA2C,OAA3C,CAKA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,C,gGACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAgB,eACEH,QAAQ,CAAC,CAC7CI,MAAM,CAAE,CAAC,CACPC,IAAI,CAAE,UADC,CAEPC,IAAI,CAAE,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CAAa,EAAb,CAAiB,EAAjB,CAAqB,EAArB,CAAyB,EAAzB,CAA6B,EAA7B,CAAiC,CAAjC,CAAoC,CAApC,CAAuC,EAAvC,CAA2C,EAA3C,CAFC,CAAD,CAIR,CACED,IAAI,CAAE,MADR,CAEEC,IAAI,CAAE,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CAAa,EAAb,CAAiB,EAAjB,CAAqB,EAArB,CAAyB,EAAzB,CAA6B,EAA7B,CAAiC,EAAjC,CAAqC,EAArC,CAAyC,EAAzC,CAA6C,EAA7C,CAFR,CAJQ,CAQR,CACED,IAAI,CAAE,QADR,CAEEC,IAAI,CAAE,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CAAa,EAAb,CAAiB,EAAjB,CAAqB,EAArB,CAAyB,EAAzB,CAA6B,EAA7B,CAAiC,EAAjC,CAAqC,EAArC,CAAyC,EAAzC,CAA6C,EAA7C,CAFR,CARQ,CAYR,CACID,IAAI,CAAE,KADV,CAEIC,IAAI,CAAE,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CAAa,EAAb,CAAiB,EAAjB,CAAqB,EAArB,CAAyB,EAAzB,CAA6B,EAA7B,CAAiC,EAAjC,CAAqC,EAArC,CAAyC,EAAzC,CAA6C,EAA7C,CAFV,CAZQ,CADqC,CAkB/CC,OAAO,CAAG,CACRC,KAAK,CAAE,CACPC,IAAI,CAAE,MADC,CAEPC,IAAI,CAAE,CACJC,OAAO,CAAE,KADL,CAFC,CADC,CAOVC,MAAM,CAAET,KAAK,CAACU,KAAN,CAAaV,KAAK,CAACU,KAAnB,CAA2B,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAPzB,CAQVC,UAAU,CAAE,CACVH,OAAO,CAAE,KADC,CARF,CAWVI,MAAM,CAAE,CACNC,KAAK,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CADD,CAENC,SAAS,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAFL,CAXE,CAeVC,KAAK,CAAE,CACLC,UAAU,CAAE,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CAAoC,KAApC,CAA2C,KAA3C,CAAkD,KAAlD,CAAyD,KAAzD,CACV,KADU,CACH,KADG,CACI,KADJ,CADP,CAfG,CAoBVC,IAAI,CAAE,CACJC,WAAW,CAAE,SADT,CApBI,CAuBVC,MAAM,CAAE,CACNC,IAAI,CAAE,KADA,CAvBE,CA0BVC,UAAU,CAAE,CAAC,CACXC,UAAU,CAAE,GADD,CAEXlB,OAAO,CAAE,CACLC,KAAK,CAAE,CACHQ,KAAK,CAAE,GADJ,CADF,CAILM,MAAM,CAAE,CACJI,QAAQ,CAAE,QADN,CAJH,CAFE,CAAD,CA1BF,CAlBqC,CAAD,CADV,wCAC/BC,YAD+B,eACjBC,eADiB,eA4DtC,mBACI,sCACI,KAAC,MAAD,EACI,OAAO,CAAED,YAAY,CAACpB,OAD1B,CAEI,MAAM,CAAEoB,YAAY,CAACvB,MAFzB,CAGI,IAAI,CAAC,MAHT,CAII,MAAM,CAAC,KAJX,EADJ,EADJ,CAUH,CAtEM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n} from \"mdbreact\";\nimport Charts from \"react-apexcharts\";\nexport const TimeSeries = (props: any) => {\n    const [chartoptions, setChartoptions] = useState({\n        series: [{\n          name: \"Critical\",\n          data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]\n        },\n        {\n          name: \"High\",\n          data: [35, 41, 42, 42, 29, 18, 29, 37, 34, 26, 20, 17]\n        },\n        {\n          name: 'Medium',\n          data: [46, 47, 44, 49, 35, 38, 22, 47, 32, 26, 25, 17]\n        },\n        {\n            name: 'Low',\n            data: [43, 37, 41, 42, 32, 36, 29, 37, 32, 26, 25, 17]\n          }\n      ],\n      options : {\n        chart: {\n        type: 'line',\n        zoom: {\n          enabled: false\n        },\n      },\n      colors: props.color? props.color : ['#f44336', '#ff9800', '#0784eb', '#2bbbad'],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: [2, 3, 2],\n        dashArray: [0, 5, 3]\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n          'Oct', 'Nov', 'Dec'\n        ],\n      },\n      grid: {\n        borderColor: '#f1f1f1',\n      },\n      legend: {\n        show: false\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n            chart: {\n                width: 500\n            },\n            legend: {\n                position: 'bottom'\n            }\n        }\n    }]\n    }\n      \n});\n   \n    return (\n        <>\n            <Charts\n                options={chartoptions.options}\n                series={chartoptions.series}\n                type=\"line\"\n                height=\"170\"\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}