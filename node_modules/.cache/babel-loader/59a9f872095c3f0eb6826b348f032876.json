{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/src/components/dashboard/AccountsSelector.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { MDBContainer, MDBRow } from \"mdbreact\";\nimport \"./style.css\";\nimport { fetchData } from '../../services/apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AccountsSelector = props => {\n  _s();\n\n  console.log(props);\n  const [AccountList, setAccountList] = useState([props.Account]);\n  const accountList = new Array();\n  useEffect(() => {\n    console.log(\"fetch\");\n    props.AccountToggle(props.Account);\n    fetchData('accounts', 'GET').then(res => {\n      for (let key in res) {\n        accountList.push(res[key]);\n      }\n\n      setAccountList(accountList);\n    });\n  }, [props]);\n\n  const AccountT = e => {\n    const newAccount = e.target.value;\n    props.AccountToggle(newAccount);\n  };\n\n  const token = localStorage.getItem(\"token\");\n  console.log(\"accountSelector\");\n\n  if (token === null || token === undefined || token.length < 0) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      fluid: true,\n      style: {\n        paddingTop: \"1vw\",\n        paddingLeft: \"2vw\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"accountSelect\",\n            children: \"Account:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"custom-select\",\n            onChange: e => AccountT(e),\n            value: props.aAcount,\n            children: AccountList.map(account => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: account,\n                children: account\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountsSelector, \"BRu2VgrTb43l4LQx+/AkyuC6Uvs=\");\n\n_c = AccountsSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountsSelector\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-api-access-rights/watcher-ui/src/components/dashboard/AccountsSelector.tsx"],"names":["React","useState","useEffect","Redirect","MDBContainer","MDBRow","fetchData","AccountsSelector","props","console","log","AccountList","setAccountList","Account","accountList","Array","AccountToggle","then","res","key","push","AccountT","e","newAccount","target","value","token","localStorage","getItem","undefined","length","pathname","paddingTop","paddingLeft","aAcount","map","account"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAQIC,YARJ,EAYIC,MAZJ,QAuBO,UAvBP;AA0BA,OAAO,aAAP;AAEA,SAASC,SAAT,QAA0B,0BAA1B;;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAgB;AAAA;;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAACO,KAAK,CAACK,OAAP,CAAD,CAA9C;AACA,QAAMC,WAAgB,GAAG,IAAIC,KAAJ,EAAzB;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,IAAAA,KAAK,CAACQ,aAAN,CAAoBR,KAAK,CAACK,OAA1B;AACAP,IAAAA,SAAS,CAAC,UAAD,EAAa,KAAb,CAAT,CAA6BW,IAA7B,CAAmCC,GAAD,IAAc;AAC5C,WAAI,IAAIC,GAAR,IAAeD,GAAf,EAAmB;AACfJ,QAAAA,WAAW,CAACM,IAAZ,CAAiBF,GAAG,CAACC,GAAD,CAApB;AACH;;AACDP,MAAAA,cAAc,CAACE,WAAD,CAAd;AACH,KALD;AAMH,GATQ,EASN,CAACN,KAAD,CATM,CAAT;;AAWA,QAAMa,QAAQ,GAAIC,CAAD,IAAY;AACzB,UAAMC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA5B;AACAjB,IAAAA,KAAK,CAACQ,aAAN,CAAoBO,UAApB;AACH,GAHD;;AAIA,QAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,MAAIgB,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKG,SAA5B,IAAyCH,KAAK,CAACI,MAAN,GAAe,CAA5D,EAA+D;AAC3D,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACjBC,QAAAA,QAAQ,EAAE;AADO;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AACD,sBACI;AAAA,2BAEI,QAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,WAAW,EAAE;AAAlC,OAA3B;AAAA,6BACI,QAAC,MAAD;AAAA,+BACI;AAAA,kCACA;AAAO,YAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI;AAAQ,YAAA,SAAS,EAAC,eAAlB;AACC,YAAA,QAAQ,EAAGX,CAAD,IAAYD,QAAQ,CAACC,CAAD,CAD/B;AACoC,YAAA,KAAK,EAAEd,KAAK,CAAC0B,OADjD;AAAA,sBAEIvB,WAAW,CAACwB,GAAZ,CAAiBC,OAAD,IAAkB;AAC9B,kCAAO;AAAQ,gBAAA,KAAK,EAAEA,OAAf;AAAA,0BAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAAP;AACJ,aAFA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAkBH,CA5CM;;GAAM7B,gB;;KAAAA,gB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBProgress,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBreadcrumb,\n    MDBBreadcrumbItem\n} from \"mdbreact\";\nimport { useHistory } from \"react-router\";\nimport { Chart } from \"react-google-charts\";\nimport \"./style.css\";\nimport domain from '../../assets/images/domain.png'\nimport { fetchData } from '../../services/apiConfig'\nexport const AccountsSelector = (props: any) => {\n    console.log(props)\n    const [AccountList, setAccountList] = useState([props.Account]);\n    const accountList: any = new Array();\n    useEffect(() => {\n        console.log(\"fetch\")\n        props.AccountToggle(props.Account)\n        fetchData('accounts', 'GET').then((res: any) => {\n            for(let key in res){\n                accountList.push(res[key]);\n            }\n            setAccountList(accountList)\n        })\n    }, [props]);\n    \n    const AccountT = (e: any) => {\n        const newAccount = e.target.value;\n        props.AccountToggle(newAccount);\n    }\n    const token = localStorage.getItem(\"token\");\n    console.log(\"accountSelector\")\n    if (token === null || token === undefined || token.length < 0) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n    return (\n        <>\n            {/* <MDBContainer fluid style={{ paddingTop: \"2vw\", paddingLeft: \"2vw\" }}> */}\n            <MDBContainer fluid style={{ paddingTop: \"1vw\", paddingLeft: \"2vw\"  }}>\n                <MDBRow>\n                    <div>\n                    <label className=\"accountSelect\">Account:</label>\n                        <select className=\"custom-select\" \n                         onChange={(e: any) => AccountT(e)} value={props.aAcount}>\n                           {AccountList.map((account: any) => {\n                                return <option value={account}>{account}</option>\n                           })}\n                        </select>\n                    </div>\n                </MDBRow>\n            </MDBContainer>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}