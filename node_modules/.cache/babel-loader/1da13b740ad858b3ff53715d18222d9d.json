{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/dashboard/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect } from 'react-router';\nimport { MDBContainer, MDBRow } from \"mdbreact\";\nimport \"./style.css\";\nimport Charts from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = props => {\n  _s();\n\n  const token = localStorage.getItem(\"token\");\n  const [chartoptions, setChartoptions] = useState({\n    options: {\n      chart: {\n        id: \"bar\"\n      },\n      xaxis: {\n        categories: [\"Critical\", \"High\", \"Low\"],\n        offsetY: -20,\n        labels: {\n          show: false\n        },\n        axisBorder: {\n          show: true,\n          color: '#78909C',\n          height: 1,\n          width: '100%',\n          offsetX: 0,\n          offsetY: 0\n        }\n      },\n      colors: ['#f44336', '#ff9800', '#2bbbad', '#13d8aa', '#A5978B', '#2b908f', '#f9a3a4', '#90ee7e', '#f48024', '#69d2e7'],\n      dataLabels: {\n        enabled: false\n      },\n      legend: {\n        position: \"right\",\n        offsetY: 40\n      },\n      plotOptions: {\n        bar: {\n          distributed: true\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      },\n      grid: {\n        show: false // padding: {\n        //     top: 20,\n        //     right: 0,\n        //     bottom: 0,\n        //     left: 0\n        // },  \n\n      }\n    },\n    series: [{\n      name: \"Vulnearbility\",\n      data: [30, 40, 45]\n    }]\n  });\n  console.log(props);\n\n  if (token === null || token === undefined || token.length < 0) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      fluid: true,\n      className: \"pt-5 pb-5\",\n      style: {\n        padding: \"2vw\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MDBRow, {\n        style: {\n          height: \"200px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Charts, {\n          options: chartoptions.options,\n          series: chartoptions.series,\n          type: \"bar\",\n          width: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"7rx4HXcmzN1Y2a2bFS5O/Ec4jTI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/dashboard/Home.tsx"],"names":["React","useState","Redirect","MDBContainer","MDBRow","Charts","Home","props","token","localStorage","getItem","chartoptions","setChartoptions","options","chart","id","xaxis","categories","offsetY","labels","show","axisBorder","color","height","width","offsetX","colors","dataLabels","enabled","legend","position","plotOptions","bar","distributed","yaxis","grid","series","name","data","console","log","undefined","length","pathname","padding"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBProgress,\n    MDBListGroup,\n    MDBListGroupItem\n} from \"mdbreact\";\nimport { useHistory } from \"react-router\";\nimport { Chart } from \"react-google-charts\";\nimport \"./style.css\"\nimport ApexCharts from 'apexcharts';\nimport Charts from \"react-apexcharts\";\nexport const Home = (props: any) => {\n    const token = localStorage.getItem(\"token\");\n    const [chartoptions, setChartoptions] = useState({\n        options: {\n            chart: {\n                id: \"bar\",\n            },\n            xaxis: {\n                categories: [\"Critical\", \"High\", \"Low\"],\n                offsetY: -20,\n                labels: {\n                    show: false\n                  },\n                  axisBorder: {\n                    show: true,\n                    color: '#78909C',\n                    height: 1,\n                    width: '100%',\n                    offsetX: 0,\n                    offsetY: 0\n                },\n            },\n            \n            colors: ['#f44336', '#ff9800', '#2bbbad', '#13d8aa', '#A5978B', '#2b908f', '#f9a3a4', '#90ee7e',\n                '#f48024', '#69d2e7'\n            ],\n            dataLabels: {\n                enabled: false,\n\n            },\n            legend: {\n                position: \"right\",\n                offsetY: 40\n            },\n            plotOptions: {\n                bar: {\n                    distributed: true,\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                },\n            },\n            grid: {\n               show: false,\n                // padding: {\n                //     top: 20,\n                //     right: 0,\n                //     bottom: 0,\n                //     left: 0\n                // },  \n            }\n        },\n        series:\n            [{\n                name: \"Vulnearbility\",\n                data: [30, 40, 45],\n            }]\n\n    });\n    console.log(props)\n    if (token === null || token === undefined || token.length < 0) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n    return (\n        <>\n            <MDBContainer fluid className=\"pt-5 pb-5\" style={{ padding: \"2vw\" }}>\n                <MDBRow style={{height: \"200px\"}}>\n                    <Charts\n                        options={chartoptions.options}\n                        series={chartoptions.series}\n                        type=\"bar\"\n                        width=\"300\"\n                    />\n\n                </MDBRow>\n            </MDBContainer>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}