{"ast":null,"code":"var _jsxFileName = \"/Users/ankitadixit/Documents/watcher-ui/src/components/dashboard/PhaseSelector.tsx\";\nimport React from \"react\";\nimport { Redirect } from 'react-router';\nimport { MDBContainer, MDBRow } from \"mdbreact\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PhaseSelector = props => {\n  // const [AccountList, setAccountList] = useState([props.Account]);\n  // const accountList: any = new Array();\n  // useEffect(() => {\n  //     fetchData('vapt', 'GET').then((res: any) => {\n  //         console.log(res)\n  //         // for(let key in res){\n  //         //     console.log(props.Account)\n  //         //     console.log(res[key]);\n  //         //     accountList.push(res[key]);\n  //         // }\n  //         setAccountList(accountList)\n  //     })\n  // }, []);\n  const AccountT = e => {\n    console.log(e.target.value);\n    const newAccount = e.target.value;\n    props.AccountToggle(newAccount);\n  }; // console.log(AccountList)\n\n\n  console.log(props.account);\n  const token = localStorage.getItem(\"token\");\n  console.log(\"accountSelector\");\n\n  if (token === null || token === undefined || token.length < 0) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      fluid: true,\n      style: {\n        paddingTop: \"2vw\",\n        paddingLeft: \"2vw\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"custom-select\",\n            style: {\n              width: \"250px\"\n            },\n            onChange: e => AccountT(e),\n            value: props.account,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"q1\",\n              children: \"quarte1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = PhaseSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhaseSelector\");","map":{"version":3,"sources":["/Users/ankitadixit/Documents/watcher-ui/src/components/dashboard/PhaseSelector.tsx"],"names":["React","Redirect","MDBContainer","MDBRow","PhaseSelector","props","AccountT","e","console","log","target","value","newAccount","AccountToggle","account","token","localStorage","getItem","undefined","length","pathname","paddingTop","paddingLeft","width"],"mappings":";AAAA,OAAOA,KAAP,MAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAQIC,YARJ,EAYIC,MAZJ,QAuBO,UAvBP;AA0BA,OAAO,aAAP;;;AAGA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,QAAQ,GAAIC,CAAD,IAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACA,UAAMC,UAAU,GAAGL,CAAC,CAACG,MAAF,CAASC,KAA5B;AACAN,IAAAA,KAAK,CAACQ,aAAN,CAAoBD,UAApB;AACH,GAJD,CAfyC,CAoBzC;;;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACS,OAAlB;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,MAAIM,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKG,SAA5B,IAAyCH,KAAK,CAACI,MAAN,GAAe,CAA5D,EAA+D;AAC3D,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACjBC,QAAAA,QAAQ,EAAE;AADO;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AACD,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,WAAW,EAAE;AAAlC,OAA3B;AAAA,6BACI,QAAC,MAAD;AAAA,+BACI;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAzC;AAA6D,YAAA,QAAQ,EAAGhB,CAAD,IAAYD,QAAQ,CAACC,CAAD,CAA3F;AAAgG,YAAA,KAAK,EAAEF,KAAK,CAACS,OAA7G;AAAA,mCAES;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH,CA5CM;KAAMV,a","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Header } from \"../../common/Header\";\nimport {\n    MDBBtn,\n    MDBFreeBird,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardText,\n    MDBCol,\n    MDBContainer,\n    MDBFormInline,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBEdgeHeader,\n    MDBCardTitle,\n    MDBProgress,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBreadcrumb,\n    MDBBreadcrumbItem\n} from \"mdbreact\";\nimport { useHistory } from \"react-router\";\nimport { Chart } from \"react-google-charts\";\nimport \"./style.css\";\nimport domain from '../../assets/images/domain.png'\nimport { fetchData } from '../../services/apiConfig'\nexport const PhaseSelector = (props: any) => {\n    // const [AccountList, setAccountList] = useState([props.Account]);\n    // const accountList: any = new Array();\n    // useEffect(() => {\n    //     fetchData('vapt', 'GET').then((res: any) => {\n    //         console.log(res)\n    //         // for(let key in res){\n    //         //     console.log(props.Account)\n    //         //     console.log(res[key]);\n    //         //     accountList.push(res[key]);\n    //         // }\n    //         setAccountList(accountList)\n    //     })\n    // }, []);\n    \n    const AccountT = (e: any) => {\n        console.log(e.target.value)\n        const newAccount = e.target.value;\n        props.AccountToggle(newAccount);\n    }\n    // console.log(AccountList)\n    console.log(props.account)\n    const token = localStorage.getItem(\"token\");\n    console.log(\"accountSelector\")\n    if (token === null || token === undefined || token.length < 0) {\n        return <Redirect to={{\n            pathname: '/login',\n        }} />\n    }\n    return (\n        <>\n            <MDBContainer fluid style={{ paddingTop: \"2vw\", paddingLeft: \"2vw\" }}>\n                <MDBRow>\n                    <div>\n                        <select className=\"custom-select\" style={{ width: \"250px\" }} onChange={(e: any) => AccountT(e)} value={props.account}>\n                           {/* {AccountList.map((account: any) => { */}\n                                 <option value=\"q1\">quarte1</option>\n                           {/* })} */}\n                        </select>\n                    </div>\n                </MDBRow>\n            </MDBContainer>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}